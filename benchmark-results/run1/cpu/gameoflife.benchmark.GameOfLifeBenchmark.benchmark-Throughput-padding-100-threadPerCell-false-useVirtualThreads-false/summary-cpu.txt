--- Execution profile ---
Total samples       : 73247
unknown_Java        : 144 (0.20%)

--- 17542755582 ns (2.39%), 1753 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#1 tid=422004]

--- 17450921510 ns (2.38%), 1744 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#2 tid=422005]

--- 17280610383 ns (2.35%), 1727 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#3 tid=422006]

--- 16780274598 ns (2.29%), 1677 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#0 tid=421962]

--- 16229426282 ns (2.21%), 1622 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#4 tid=422007]

--- 15869092620 ns (2.16%), 1586 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#5 tid=422008]

--- 15582831596 ns (2.12%), 1557 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#6 tid=422009]

--- 15099619223 ns (2.06%), 1509 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#7 tid=422012]

--- 12427430196 ns (1.69%), 1242 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#0 tid=421962]

--- 12267896119 ns (1.67%), 1226 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#3 tid=422006]

--- 12076931393 ns (1.65%), 1207 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#1 tid=422004]

--- 11866760671 ns (1.62%), 1186 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#2 tid=422005]

--- 11076130946 ns (1.51%), 1107 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#4 tid=422007]

--- 10707324122 ns (1.46%), 1070 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#5 tid=422008]

--- 10606794760 ns (1.44%), 1060 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#6 tid=422009]

--- 10156789328 ns (1.38%), 1015 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread
  [10] [G1 Refine#7 tid=422012]

--- 5963581906 ns (0.81%), 596 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#3 tid=422006]

--- 5943960927 ns (0.81%), 594 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#1 tid=422004]

--- 5682727656 ns (0.77%), 568 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#1 tid=422004]

--- 5543365916 ns (0.76%), 554 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#2 tid=422005]

--- 5502379351 ns (0.75%), 550 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#2 tid=422005]

--- 5473468865 ns (0.75%), 547 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#4 tid=422007]

--- 5472990577 ns (0.75%), 547 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#3 tid=422006]

--- 5363277017 ns (0.73%), 536 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#5 tid=422008]

--- 5323283095 ns (0.73%), 532 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#0 tid=421962]

--- 5232468155 ns (0.71%), 523 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#2 tid=422005]

--- 5222988817 ns (0.71%), 522 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#1 tid=422004]

--- 5133359193 ns (0.70%), 513 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#4 tid=422007]

--- 5123047579 ns (0.70%), 512 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#3 tid=422006]

--- 5013751844 ns (0.68%), 501 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#7 tid=422012]

--- 4942220399 ns (0.67%), 494 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#5 tid=422008]

--- 4903061199 ns (0.67%), 490 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread
  [11] [G1 Refine#6 tid=422009]

--- 4902763195 ns (0.67%), 490 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#0 tid=421962]

--- 4832847803 ns (0.66%), 483 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#0 tid=421962]

--- 4762634782 ns (0.65%), 476 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#4 tid=422007]

--- 4683991345 ns (0.64%), 468 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#5 tid=422008]

--- 4502446712 ns (0.61%), 450 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#6 tid=422009]

--- 4243587355 ns (0.58%), 424 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#7 tid=422012]

--- 4193393463 ns (0.57%), 419 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#7 tid=422012]

--- 4120217132 ns (0.56%), 412 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#6 tid=422009]

--- 2621701071 ns (0.36%), 262 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#0 tid=421962]

--- 2531290568 ns (0.34%), 253 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#3 tid=422006]

--- 2421236588 ns (0.33%), 242 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#2 tid=422005]

--- 2360959074 ns (0.32%), 236 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#4 tid=422007]

--- 2311485239 ns (0.31%), 231 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#2 tid=422005]

--- 2291843604 ns (0.31%), 229 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#1 tid=422004]

--- 2191531540 ns (0.30%), 219 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#1 tid=422004]

--- 2171037804 ns (0.30%), 217 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#3 tid=422006]

--- 2123883043 ns (0.29%), 212 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-8 tid=421994]

--- 2121385979 ns (0.29%), 212 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#4 tid=422007]

--- 2120894303 ns (0.29%), 212 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#2 tid=422005]

--- 2107850314 ns (0.29%), 210 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-3 tid=421989]

--- 2085155324 ns (0.28%), 208 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-5 tid=421991]

--- 2071700840 ns (0.28%), 207 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#5 tid=422008]

--- 2051023531 ns (0.28%), 205 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#4 tid=422007]

--- 2013897030 ns (0.27%), 201 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-6 tid=421992]

--- 2000864383 ns (0.27%), 200 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#0 tid=421962]

--- 1997051315 ns (0.27%), 199 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-4 tid=421990]

--- 1972296425 ns (0.27%), 197 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#1 tid=422004]

--- 1944914815 ns (0.26%), 194 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-7 tid=421993]

--- 1931231453 ns (0.26%), 193 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#5 tid=422008]

--- 1921209706 ns (0.26%), 192 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#3 tid=422006]

--- 1911015733 ns (0.26%), 191 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#0 tid=421962]

--- 1900900506 ns (0.26%), 190 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#4 tid=422007]

--- 1891011368 ns (0.26%), 189 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#5 tid=422008]

--- 1871081235 ns (0.25%), 181 samples
  [ 0] __GI___pthread_cond_signal
  [ 1] Unsafe.unpark
  [ 2] LockSupport.unpark
  [ 3] AbstractQueuedSynchronizer.signalNext
  [ 4] AbstractQueuedSynchronizer.release
  [ 5] ReentrantLock.unlock
  [ 6] LinkedBlockingQueue.signalNotEmpty
  [ 7] LinkedBlockingQueue.put
  [ 8] Channel.put
  [ 9] GameOfLife.lambda$calculateFrame$5
  [10] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [11] Dimensions.forEachRowCol
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$7
  [14] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run
  [18] [Thread-9 tid=421995]

--- 1861594574 ns (0.25%), 186 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#1 tid=422004]

--- 1851155283 ns (0.25%), 185 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#6 tid=422009]

--- 1831093897 ns (0.25%), 183 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#2 tid=422005]

--- 1795971820 ns (0.24%), 179 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801085098.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-2 tid=421988]

--- 1791217887 ns (0.24%), 179 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#6 tid=422009]

--- 1740637596 ns (0.24%), 174 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#6 tid=422009]

--- 1728243835 ns (0.24%), 173 samples
  [ 0] void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#7 tid=422012]

--- 1721209724 ns (0.23%), 172 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#3 tid=422006]

--- 1710977327 ns (0.23%), 171 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#6 tid=422009]

--- 1695077385 ns (0.23%), 164 samples
  [ 0] __lock_text_start_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___pthread_cond_signal
  [ 9] Unsafe.unpark
  [10] LockSupport.unpark
  [11] AbstractQueuedSynchronizer.signalNext
  [12] AbstractQueuedSynchronizer.release
  [13] ReentrantLock.unlock
  [14] LinkedBlockingQueue.signalNotEmpty
  [15] LinkedBlockingQueue.put
  [16] Channel.put
  [17] GameOfLife.lambda$calculateFrame$5
  [18] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [19] Dimensions.forEachRowCol
  [20] GameOfLife.calculateFrame
  [21] GameOfLife.lambda$calculateFrameBlocking$7
  [22] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [23] ThreadPoolExecutor.runWorker
  [24] ThreadPoolExecutor$Worker.run
  [25] Thread.run
  [26] [Thread-9 tid=421995]

--- 1691104423 ns (0.23%), 169 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#7 tid=422012]

--- 1670777532 ns (0.23%), 167 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#7 tid=422012]

--- 1661781798 ns (0.23%), 166 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread
  [12] [G1 Refine#0 tid=421962]

--- 1580761095 ns (0.22%), 158 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#5 tid=422008]

--- 1461260268 ns (0.20%), 146 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#7 tid=422012]

--- 1435423935 ns (0.20%), 142 samples
  [ 0] GameOfLife.lambda$calculateFrame$6
  [ 1] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$7
  [ 5] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run
  [ 9] [Thread-9 tid=421995]

--- 1334525761 ns (0.18%), 131 samples
  [ 0] __lock_text_start_[k]
  [ 1] try_to_wake_up_[k]
  [ 2] wake_up_q_[k]
  [ 3] futex_wake_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __GI___pthread_cond_signal
  [ 9] Unsafe.unpark
  [10] LockSupport.unpark
  [11] AbstractQueuedSynchronizer.signalNext
  [12] AbstractQueuedSynchronizer.release
  [13] ReentrantLock.unlock
  [14] LinkedBlockingQueue.signalNotEmpty
  [15] LinkedBlockingQueue.put
  [16] Channel.put
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run
  [25] [Thread-2 tid=421988]

--- 1321791272 ns (0.18%), 132 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-5 tid=421991]

--- 1321316922 ns (0.18%), 132 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-6 tid=421992]

--- 1314546472 ns (0.18%), 131 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-2 tid=421988]

--- 1280433512 ns (0.17%), 128 samples
  [ 0] _dl_update_slotinfo
  [ 1] [unknown]
  [ 2] [G1 Refine#0 tid=421962]

--- 1266598506 ns (0.17%), 125 samples
  [ 0] GameOfLife.lambda$calculateFrame$5
  [ 1] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$7
  [ 5] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run
  [ 9] [Thread-9 tid=421995]

--- 1261751164 ns (0.17%), 126 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-6 tid=421992]

--- 1241708097 ns (0.17%), 124 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-3 tid=421989]

--- 1201998862 ns (0.16%), 120 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-5 tid=421991]

--- 1192663341 ns (0.16%), 119 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-6 tid=421992]

--- 1191756739 ns (0.16%), 119 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$53.0x0000000801085098.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-8 tid=421994]

--- 1171232179 ns (0.16%), 117 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$53.0x0000000801085098.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-6 tid=421992]

--- 1151348733 ns (0.16%), 115 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$53.0x0000000801085098.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-7 tid=421993]

--- 1150726190 ns (0.16%), 115 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-8 tid=421994]

--- 1150671287 ns (0.16%), 115 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#1 tid=422004]

--- 1141874750 ns (0.16%), 114 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-5 tid=421991]

--- 1141450069 ns (0.16%), 114 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-4 tid=421990]

--- 1120720424 ns (0.15%), 112 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#7 tid=422012]

--- 1112488059 ns (0.15%), 111 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-4 tid=421990]

--- 1111716004 ns (0.15%), 111 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-4 tid=421990]

--- 1111529071 ns (0.15%), 111 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-3 tid=421989]

--- 1110586292 ns (0.15%), 111 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-8 tid=421994]

--- 1101784924 ns (0.15%), 110 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-3 tid=421989]

--- 1100975104 ns (0.15%), 110 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$55.0x00000008010854d0.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run
  [28] [Thread-5 tid=421991]

--- 1082469712 ns (0.15%), 104 samples
  [ 0] __GI___futex_abstimed_wait_cancelable64
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer$ConditionNode.block
  [ 4] ForkJoinPool.unmanagedBlock
  [ 5] ForkJoinPool.managedBlock
  [ 6] AbstractQueuedSynchronizer$ConditionObject.await
  [ 7] LinkedBlockingQueue.take
  [ 8] Channel.take
  [ 9] GameOfLife.lambda$calculateFrame$6
  [10] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [11] Dimensions.forEachRowCol
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$7
  [14] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run
  [18] [Thread-9 tid=421995]

--- 1071407507 ns (0.15%), 107 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-5 tid=421991]

--- 1065134810 ns (0.15%), 105 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] GameOfLife.lambda$calculateFrame$6
  [ 3] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run
  [11] [Thread-9 tid=421995]

--- 1061349718 ns (0.14%), 106 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-7 tid=421993]

--- 1061103063 ns (0.14%), 106 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] LinkedBlockingQueue.enqueue
  [ 7] LinkedBlockingQueue.put
  [ 8] Channel.put
  [ 9] Cell.lambda$notifyLiveness$0
  [10] Cell$$Lambda$53.0x0000000801085098.accept
  [11] ArrayList.forEach
  [12] Cell.notifyLiveness
  [13] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-7 tid=421993]

--- 1060773579 ns (0.14%), 106 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-7 tid=421993]

--- 1052387421 ns (0.14%), 105 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801085098.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-7 tid=421993]

--- 1051470124 ns (0.14%), 105 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-8 tid=421994]

--- 1040681462 ns (0.14%), 104 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#0 tid=421962]

--- 1022659039 ns (0.14%), 102 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-8 tid=421994]

--- 1022543415 ns (0.14%), 102 samples
  [ 0] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-2 tid=421988]

--- 1020477860 ns (0.14%), 102 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#2 tid=422005]

--- 1013435532 ns (0.14%), 100 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run
  [12] [Thread-9 tid=421995]

--- 1011411638 ns (0.14%), 101 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$55.0x00000008010854d0.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run
  [28] [Thread-3 tid=421989]

--- 1010375625 ns (0.14%), 101 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-7 tid=421993]

--- 1000802301 ns (0.14%), 100 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$55.0x00000008010854d0.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run
  [28] [Thread-4 tid=421990]

--- 990834801 ns (0.13%), 99 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-8 tid=421994]

--- 971023440 ns (0.13%), 97 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-7 tid=421993]

--- 964564512 ns (0.13%), 95 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-9 tid=421995]

--- 960932414 ns (0.13%), 96 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-7 tid=421993]

--- 960533479 ns (0.13%), 96 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#5 tid=422008]

--- 960516871 ns (0.13%), 96 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#4 tid=422007]

--- 954878812 ns (0.13%), 95 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] GameOfLife.lambda$calculateFrame$5
  [12] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [13] Dimensions.forEachRowCol
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$7
  [16] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-9 tid=421995]

--- 950895819 ns (0.13%), 95 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-4 tid=421990]

--- 931103707 ns (0.13%), 93 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$53.0x0000000801085098.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-6 tid=421992]

--- 930413275 ns (0.13%), 93 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#3 tid=422006]

--- 921647415 ns (0.13%), 92 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$53.0x0000000801085098.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-7 tid=421993]

--- 912447065 ns (0.12%), 91 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-2 tid=421988]

--- 902487241 ns (0.12%), 89 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife.lambda$calculateFrame$6
  [ 7] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run
  [15] [Thread-9 tid=421995]

--- 894027865 ns (0.12%), 89 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] GameOfLife.lambda$calculateFrame$5
  [13] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [14] Dimensions.forEachRowCol
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$7
  [17] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run
  [21] [Thread-9 tid=421995]

--- 891325160 ns (0.12%), 89 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801085098.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-6 tid=421992]

--- 890896782 ns (0.12%), 89 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-6 tid=421992]

--- 883005803 ns (0.12%), 88 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-4 tid=421990]

--- 859999361 ns (0.12%), 85 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$60.0x0000000801085b08.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run
  [12] [Thread-9 tid=421995]

--- 852717214 ns (0.12%), 85 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-2 tid=421988]

--- 851035921 ns (0.12%), 85 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$55.0x00000008010854d0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run
  [29] [Thread-4 tid=421990]

--- 841151956 ns (0.11%), 84 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-4 tid=421990]

--- 840857802 ns (0.11%), 84 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$53.0x0000000801085098.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-8 tid=421994]

--- 831147135 ns (0.11%), 83 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] LinkedBlockingQueue.enqueue
  [ 7] LinkedBlockingQueue.put
  [ 8] Channel.put
  [ 9] Cell.lambda$notifyLiveness$0
  [10] Cell$$Lambda$53.0x0000000801085098.accept
  [11] ArrayList.forEach
  [12] Cell.notifyLiveness
  [13] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-6 tid=421992]

--- 831071187 ns (0.11%), 83 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$53.0x0000000801085098.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-5 tid=421991]

--- 830887241 ns (0.11%), 83 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-6 tid=421992]

--- 830601261 ns (0.11%), 83 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#6 tid=422009]

--- 822174232 ns (0.11%), 82 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$55.0x00000008010854d0.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run
  [28] [Thread-2 tid=421988]

--- 820507011 ns (0.11%), 82 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread
  [ 7] [G1 Refine#2 tid=422005]

--- 813549118 ns (0.11%), 81 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-2 tid=421988]

--- 811642093 ns (0.11%), 81 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-5 tid=421991]

--- 811121224 ns (0.11%), 81 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801085098.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-8 tid=421994]

--- 809872371 ns (0.11%), 80 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$52.0x0000000801084e78.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$51.0x0000000801084c68.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run
  [15] [Thread-9 tid=421995]

--- 791449476 ns (0.11%), 79 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-5 tid=421991]

--- 791303004 ns (0.11%), 79 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-6 tid=421992]

--- 781570599 ns (0.11%), 78 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run
  [22] [Thread-3 tid=421989]

--- 780884665 ns (0.11%), 78 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-3 tid=421989]

--- 770492974 ns (0.10%), 77 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$55.0x00000008010854d0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run
  [29] [Thread-3 tid=421989]

--- 761795115 ns (0.10%), 76 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-3 tid=421989]

--- 760102759 ns (0.10%), 76 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#1 tid=421997]

--- 752106018 ns (0.10%), 75 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801085098.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-2 tid=421988]

--- 751491988 ns (0.10%), 75 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-2 tid=421988]

--- 750553811 ns (0.10%), 75 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread
  [ 7] [G1 Refine#1 tid=422004]

--- 741377948 ns (0.10%), 74 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-7 tid=421993]

--- 741052030 ns (0.10%), 74 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] LinkedBlockingQueue.enqueue
  [ 7] LinkedBlockingQueue.put
  [ 8] Channel.put
  [ 9] Cell.lambda$notifyLiveness$0
  [10] Cell$$Lambda$53.0x0000000801085098.accept
  [11] ArrayList.forEach
  [12] Cell.notifyLiveness
  [13] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-8 tid=421994]

--- 740842683 ns (0.10%), 74 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$53.0x0000000801085098.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-5 tid=421991]

--- 740100746 ns (0.10%), 74 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#3 tid=421999]

--- 732614362 ns (0.10%), 73 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$55.0x00000008010854d0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run
  [29] [Thread-2 tid=421988]

--- 730695882 ns (0.10%), 73 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-2 tid=421988]

--- 730127155 ns (0.10%), 73 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#6 tid=422002]

--- 722778684 ns (0.10%), 72 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801085098.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run
  [18] [Thread-4 tid=421990]

--- 720656958 ns (0.10%), 72 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-5 tid=421991]

--- 720504923 ns (0.10%), 72 samples
  [ 0] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#3 tid=422006]

--- 720096340 ns (0.10%), 72 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#5 tid=422001]

--- 720085799 ns (0.10%), 72 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#4 tid=422000]

--- 710564470 ns (0.10%), 71 samples
  [ 0] G1BlockOffsetTablePart::block_start(void const*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [G1 Refine#6 tid=422009]

--- 700361996 ns (0.10%), 70 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$55.0x00000008010854d0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run
  [29] [Thread-5 tid=421991]

--- 690061834 ns (0.09%), 69 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#7 tid=422003]

--- 680190333 ns (0.09%), 68 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-8 tid=421994]

--- 671416157 ns (0.09%), 67 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-6 tid=421992]

--- 671330234 ns (0.09%), 67 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801085098.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run
  [18] [Thread-2 tid=421988]

--- 670730383 ns (0.09%), 67 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801085098.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-5 tid=421991]

--- 670725545 ns (0.09%), 67 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread
  [ 7] [G1 Refine#3 tid=422006]

--- 670609157 ns (0.09%), 67 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-3 tid=421989]

--- 670528493 ns (0.09%), 67 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread
  [ 7] [G1 Refine#7 tid=422012]

--- 670257187 ns (0.09%), 67 samples
  [ 0] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread
  [ 8] [G1 Refine#0 tid=421962]

--- 663035584 ns (0.09%), 66 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-4 tid=421990]

--- 662613069 ns (0.09%), 66 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-4 tid=421990]

--- 660353444 ns (0.09%), 66 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread
  [ 7] [G1 Refine#6 tid=422009]

--- 660320564 ns (0.09%), 66 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run
  [23] [Thread-7 tid=421993]

--- 651655673 ns (0.09%), 65 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run
  [19] [Thread-3 tid=421989]

--- 651038408 ns (0.09%), 65 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$53.0x0000000801085098.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run
  [13] [Thread-8 tid=421994]

--- 650428772 ns (0.09%), 65 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-8 tid=421994]

--- 650051866 ns (0.09%), 65 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread
  [ 9] [GC Thread#2 tid=421998]

--- 641397356 ns (0.09%), 64 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801085098.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run
  [17] [Thread-3 tid=421989]

--- 640934156 ns (0.09%), 64 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801085098.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run
  [14] [Thread-8 tid=421994]

--- 640841173 ns (0.09%), 64 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801085098.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run
  [18] [Thread-8 tid=421994]

--- 640754970 ns (0.09%), 64 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-7 tid=421993]

--- 640552187 ns (0.09%), 64 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$55.0x00000008010854d0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$54.0x00000008010852b8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run
  [20] [Thread-6 tid=421992]

          ns  percent  samples  top
  ----------  -------  -------  ---
163910307414   22.33%    16378  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
110846183807   15.10%    11076  G1CardSet::add_card(unsigned int, unsigned int, bool)
 66325787901    9.03%     6628  oopDesc::size()
 52601794759    7.17%     5256  G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
 45109856727    6.14%     4508  G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
 22759637724    3.10%     2269  AbstractQueuedSynchronizer.compareAndSetState
 21534699953    2.93%     2152  void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
 20577905059    2.80%     2056  G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
 17763072251    2.42%     1775  G1HotCardCache::insert(unsigned char*)
 15174626867    2.07%     1513  AbstractOwnableSynchronizer.setExclusiveOwnerThread
 14418089052    1.96%     1437  AbstractQueuedSynchronizer.release
 14218859273    1.94%     1418  Cell.lambda$notifyLiveness$0
  9909329970    1.35%      987  Thread.interrupted
  8311253621    1.13%      830  Cell$$Lambda$55.0x00000008010854d0.apply
  7523102349    1.02%      751  ReduceOps$5ReducingSink.get
  7398029737    1.01%      737  LinkedBlockingQueue.put
  7058027142    0.96%      705  SpinPause
  6956193543    0.95%      693  LinkedBlockingQueue.take
  6220810018    0.85%      622  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  6104971950    0.83%      610  G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  5949682643    0.81%      593  LinkedBlockingQueue.dequeue
  5926198783    0.81%      592  G1RemSet::clean_card_before_refine(unsigned char**)
  5898395207    0.80%      588  LinkedBlockingQueue.enqueue
  5654524867    0.77%      565  G1BlockOffsetTablePart::block_start(void const*)
  5638134897    0.77%      562  Thread.getAndClearInterrupt
  5541798436    0.75%      542  __lock_text_start_[k]
  4893454781    0.67%      489  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  3950476994    0.54%      395  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  3947751661    0.54%      394  __tls_get_addr
  3090302293    0.42%      309  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  2912739248    0.40%      283  __GI___pthread_cond_signal
  2538583493    0.35%      253  Channel.put
  2367751557    0.32%      236  Channel.take
  1862122174    0.25%      185  AtomicInteger.getAndDecrement
  1677501527    0.23%      166  GameOfLife.lambda$calculateFrame$6
  1668032004    0.23%      164  finish_task_switch.isra.0_[k]
  1525669090    0.21%      147  __GI___futex_abstimed_wait_cancelable64
  1430773623    0.19%      143  G1CardSet::add_card(unsigned long)
  1286622107    0.18%      127  GameOfLife.lambda$calculateFrame$5
  1280433512    0.17%      128  _dl_update_slotinfo
  1239073645    0.17%      123  AbstractQueuedSynchronizer.signalNext
  1086208152    0.15%      106  syscall_enter_from_user_mode_[k]
  1051980702    0.14%      105  ReentrantLock$Sync.lockInterruptibly
  1000429596    0.14%      100  G1CardCounts::add_card_count(unsigned char*)
   990436167    0.13%       99  void OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion)
   843639400    0.11%       84  AbstractPipeline.<init>
   823519714    0.11%       82  ReentrantLock$Sync.lock
   823104944    0.11%       82  AtomicInteger.getAndIncrement
   817491076    0.11%       79  futex_wait_[k]
   801368198    0.11%       80  StreamSupport.stream
   773279911    0.11%       77  AbstractQueuedSynchronizer$ConditionObject.signal
   769988278    0.10%       74  futex_wait_queue_me_[k]
   734199095    0.10%       71  __x64_sys_futex_[k]
   722078274    0.10%       72  ReentrantLock$Sync.tryRelease
   721876345    0.10%       70  __schedule_[k]
   693309595    0.09%       69  AbstractQueuedSynchronizer.setState
   660570438    0.09%       66  G1HeapRegionRemSetMergeCardClosure<G1MergeHeapRootsTask::G1MergeCardSetClosure, G1ContainerCardsOrRanges>::do_containerptr(unsigned int, unsigned long, void*)
   652970482    0.09%       63  ___pthread_cond_wait
   520058670    0.07%       52  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
   510092713    0.07%       51  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
   480754722    0.07%       48  __tls_get_addr@plt
   464965360    0.06%       46  GlobalCounter::write_synchronize()
   462148455    0.06%       46  ArrayList$SubList$1.next
   461236771    0.06%       46  ReferencePipeline$4.opWrapSink
   460161435    0.06%       46  update_get_addr
   455973494    0.06%       45  exit_to_user_mode_loop_[k]
   437397704    0.06%       43  Dimensions.forEachRowCol
   431141332    0.06%       43  FreeListAllocator::allocate()
   424596794    0.06%       42  __clock_nanosleep_2
   420856838    0.06%       42  Sink$ChainedReference.<init>
   420173398    0.06%       42  G1CardCounts::is_hot(unsigned int)
   413904493    0.06%       41  __GI_sched_yield
   410497728    0.06%       41  ReferencePipeline.<init>
   400181929    0.05%       40  StreamOpFlag.fromCharacteristics
   395114855    0.05%       38  futex_wait_setup_[k]
   390733788    0.05%       39  ReferencePipeline$3.opWrapSink
   381170967    0.05%       37  schedule_[k]
   374723555    0.05%       36  do_futex_[k]
   371589289    0.05%       37  ReentrantLock$Sync.isHeldExclusively
   367845116    0.05%       36  itable stub
   328664776    0.04%       32  AbstractQueuedSynchronizer.acquire
   321132596    0.04%       31  hash_futex_[k]
   320475876    0.04%       32  arch_local_irq_enable_[k]
   317594788    0.04%       31  futex_wake_[k]
   300433845    0.04%       29  do_syscall_64_[k]
   290255266    0.04%       29  unsigned long BitMap::get_next_bit_impl<0ul, false>(unsigned long, unsigned long) const [clone .part.0] [clone .isra.0]
   290092324    0.04%       28  Parker::park(bool, long)
   270380724    0.04%       27  vtable stub
   261683341    0.04%       26  __x64_sys_clock_nanosleep_[k]
   258009055    0.04%       25  Unsafe_Park
   252587060    0.03%       25  __pthread_mutex_lock@GLIBC_2.2.5
   251255231    0.03%       25  LinkedBlockingQueue.signalNotEmpty
   248235916    0.03%       24  _raw_spin_lock_[k]
   240863252    0.03%       24  [vdso]
   240031462    0.03%       24  Sink$ChainedReference.begin
   233705045    0.03%       23  GameOfLife$$Lambda$60.0x0000000801085b08.accept
   231567352    0.03%       23  Iterable.forEach
   221522319    0.03%       22  ReentrantLock.lockInterruptibly
   211970552    0.03%       21  G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
   211003030    0.03%       21  FreeListAllocator::release(void*)
   206958820    0.03%       20  __lll_lock_wake
   205924444    0.03%       20  ___pthread_mutex_unlock
   205883065    0.03%       20  __pthread_disable_asynccancel
   205841350    0.03%       20  __get_user_nocheck_4_[k]
   200014685    0.03%       20  __tls_get_addr_slow
   194460300    0.03%       19  Unsafe_Unpark
   180271032    0.02%       18  G1CardSet::coarsen_container(void* volatile*, void*, unsigned int, bool)
   180041773    0.02%       18  PipelineHelper.<init>
   171028981    0.02%       17  ArrayList$SubList$1.checkForComodification
   170729028    0.02%       17  ArrayList.elementAt
   170649043    0.02%       17  AbstractQueuedSynchronizer.getState
   170600702    0.02%       17  ImmutableCollections$ListN.get
   170417881    0.02%       17  ReentrantLock.lock
   170284709    0.02%       17  AtomicInteger.get
   165113947    0.02%       16  get_futex_key_[k]
   161139233    0.02%       16  AbstractOwnableSynchronizer.getExclusiveOwnerThread
   153496524    0.02%       15  AbstractQueuedSynchronizer.casTail
   150597312    0.02%       15  Sink$ChainedReference.end
   150534871    0.02%       15  ArrayList.spliterator
   142357115    0.02%       14  SafeThreadsListPtr::release_stable_list()
   141394232    0.02%       14  __clock_gettime_2
   141331238    0.02%       14  G1ConcurrentRefineThreadControl::maybe_activate_next(unsigned int)
   140339071    0.02%       14  G1DirtyCardQueueSet::dequeue_completed_buffer()
   131217372    0.02%       13  do_sched_yield_[k]
   131211126    0.02%       13  hrtimer_nanosleep_[k]
   122512774    0.02%       12  ThreadsListHandle::ThreadsListHandle(Thread*)
   120078992    0.02%       12  ArrayList.forEach
   112929609    0.02%       11  GameOfLife$$Lambda$52.0x0000000801084e78.accept
   112683212    0.02%       11  Unsafe.unpark
   112174675    0.02%       11  AbstractQueuedSynchronizer$ConditionObject.doSignal
   111960586    0.02%       11  Unsafe.getAndBitwiseAndInt
   110335260    0.02%       11  os::elapsed_counter()
   105433987    0.01%       10  plist_add_[k]
   103186449    0.01%       10  __GI___pthread_mutex_trylock
   100797597    0.01%       10  Rdtsc::elapsed_counter()
   100040420    0.01%       10  Cell$$Lambda$53.0x0000000801085098.accept
    93764671    0.01%        9  AbstractQueuedSynchronizer$ConditionObject.canReacquire
    93547524    0.01%        9  Unsafe.park
    91713339    0.01%        9  syscall_exit_to_user_mode_[k]
    90572462    0.01%        9  do_nanosleep_[k]
    90134247    0.01%        9  ReferencePipeline$3$1.accept
    90090124    0.01%        9  G1SegmentedArray::allocate()
    90067263    0.01%        9  G1PostEvacuateCollectionSetCleanupTask2::RedirtyLoggedCardsTask::do_work(unsigned int)
    90012491    0.01%        9  CellsGroup$$Lambda$54.0x00000008010852b8.accept
    83346810    0.01%        8  __cond_resched_[k]
    82565553    0.01%        8  ThreadsListHandle::~ThreadsListHandle()
    80759891    0.01%        8  load_balance_[k]
    73576820    0.01%        7  __GI___pthread_mutex_unlock_usercnt
    72829341    0.01%        7  rcu_all_qs_[k]
    72508923    0.01%        7  __pthread_mutex_cond_lock
    71936467    0.01%        7  JavaThread::threadObj() const
    71796950    0.01%        7  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
    71611523    0.01%        7  mark_wake_futex_[k]
    71445371    0.01%        7  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
    71301283    0.01%        7  __unqueue_futex_[k]
    70460202    0.01%        7  __run_timers.part.0_[k]
    70068400    0.01%        7  ReferencePipeline.map
    70027628    0.01%        7  SpinYield::SpinYield(unsigned int, unsigned int, unsigned int)
    70023156    0.01%        7  CellsGroup$$Lambda$48.0x0000000801084430.accept
    61900974    0.01%        6  java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
    61765957    0.01%        6  AbstractQueuedSynchronizer$ConditionNode.isReleasable
    61746800    0.01%        6  LockSupport.setCurrentBlocker
    61574857    0.01%        6  wake_q_add_safe_[k]
    61219911    0.01%        6  LockSupport.unpark
    61197738    0.01%        6  __pthread_enable_asynccancel
    60860468    0.01%        6  Integer.intValue
    60390476    0.01%        6  common_nsleep_[k]
    60101361    0.01%        6  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<TypeArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
    60008788    0.01%        6  Collection.stream
    51415631    0.01%        5  JavaThread::is_interrupted(bool)
    50791942    0.01%        5  NonJavaThread::Iterator::step()
    50607446    0.01%        5  wake_up_q_[k]
    50164689    0.01%        5  SpinYield::yield_or_sleep()
    50120090    0.01%        5  AbstractPipeline.wrapSink
    50075894    0.01%        5  calc_thresholds(unsigned long, unsigned long, unsigned int)
    50066733    0.01%        5  G1ConcurrentRefine::do_refinement_step(unsigned int, G1ConcurrentRefineStats*)
    50029338    0.01%        5  G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
    50013798    0.01%        5  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
    41450529    0.01%        4  AbstractQueuedSynchronizer$ConditionObject.enableWait
    41162366    0.01%        4  JavaFrameAnchor::make_walkable()
    40923163    0.01%        4  AbstractQueuedSynchronizer$ConditionObject.await
    40847011    0.01%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
    40749482    0.01%        4  AbstractQueuedSynchronizer$ConditionNode.block
    40744366    0.01%        4  AbstractQueuedSynchronizer.enqueue
    40441474    0.01%        4  __softirqentry_text_start_[k]
    40437948    0.01%        4  __hrtimer_init_[k]
    40356219    0.01%        4  ArrayList$SubList$1.hasNext
    40194269    0.01%        4  nanosleep
    40138368    0.01%        4  __x64_sys_sched_yield_[k]
    40003905    0.01%        4  PtrQueueSet::try_enqueue(PtrQueue&, void*)
    31183312    0.00%        3  __GI___pthread_cleanup_pop
    30870515    0.00%        3  AbstractQueuedSynchronizer$Node.setPrevRelaxed
    30818128    0.00%        3  rebalance_domains_[k]
    30496658    0.00%        3  try_to_wake_up_[k]
    30350118    0.00%        3  PtrQueueSet::retry_enqueue(PtrQueue&, void*)
    30288241    0.00%        3  os::naked_short_nanosleep(long)
    30211681    0.00%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
    30164451    0.00%        3  get_timespec64_[k]
    30147330    0.00%        3  Cell.notifyLiveness
    30060291    0.00%        3  queue_work_on_[k]
