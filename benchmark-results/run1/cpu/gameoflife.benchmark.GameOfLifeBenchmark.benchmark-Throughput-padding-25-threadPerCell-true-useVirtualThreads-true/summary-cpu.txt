--- Execution profile ---
Total samples       : 73815
unknown_Java        : 268 (0.36%)
not_walkable_Java   : 3776 (5.12%)

--- 10001466297 ns (1.35%), 1000 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=374810]

--- 9821246083 ns (1.33%), 982 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=374813]

--- 9561273323 ns (1.30%), 956 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=374811]

--- 9441437257 ns (1.28%), 944 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=374812]

--- 9361495767 ns (1.27%), 936 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=374814]

--- 9201411869 ns (1.25%), 920 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=374816]

--- 9051347628 ns (1.23%), 905 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=374817]

--- 8791251887 ns (1.19%), 879 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=374815]

--- 4830656943 ns (0.65%), 483 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-8 tid=374817]

--- 4650733042 ns (0.63%), 465 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-2 tid=374811]

--- 4630611252 ns (0.63%), 463 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-4 tid=374816]

--- 4610833335 ns (0.62%), 461 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-6 tid=374814]

--- 4520709174 ns (0.61%), 452 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-3 tid=374812]

--- 4490687902 ns (0.61%), 449 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-7 tid=374815]

--- 4230546262 ns (0.57%), 423 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=374813]

--- 4210609796 ns (0.57%), 421 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-7 tid=374815]

--- 4130642838 ns (0.56%), 413 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=374813]

--- 4120655124 ns (0.56%), 412 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-1 tid=374810]

--- 4050611666 ns (0.55%), 405 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-6 tid=374814]

--- 4040545202 ns (0.55%), 404 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-3 tid=374812]

--- 4020615927 ns (0.54%), 402 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-8 tid=374817]

--- 3850560193 ns (0.52%), 385 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-2 tid=374811]

--- 3750557840 ns (0.51%), 375 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-1 tid=374810]

--- 3620567275 ns (0.49%), 362 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-3 tid=374812]

--- 3620563011 ns (0.49%), 362 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-1 tid=374810]

--- 3560528779 ns (0.48%), 356 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-7 tid=374815]

--- 3560484721 ns (0.48%), 356 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-8 tid=374817]

--- 3550487406 ns (0.48%), 355 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-4 tid=374816]

--- 3470544918 ns (0.47%), 347 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-2 tid=374811]

--- 3370554516 ns (0.46%), 337 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-5 tid=374813]

--- 3320476064 ns (0.45%), 332 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-6 tid=374814]

--- 3280523218 ns (0.44%), 328 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801084620.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-4 tid=374816]

--- 3180494092 ns (0.43%), 318 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=374810]

--- 3150507227 ns (0.43%), 315 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=374813]

--- 3130443917 ns (0.42%), 313 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=374816]

--- 3120405965 ns (0.42%), 312 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=374811]

--- 3030323570 ns (0.41%), 303 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-3 tid=374812]

--- 3010431488 ns (0.41%), 301 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=374815]

--- 2980455841 ns (0.40%), 298 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=374816]

--- 2950467189 ns (0.40%), 295 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=374814]

--- 2940483900 ns (0.40%), 294 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-7 tid=374815]

--- 2890378539 ns (0.39%), 289 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-5 tid=374813]

--- 2800437416 ns (0.38%), 280 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=374817]

--- 2790348891 ns (0.38%), 279 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-1 tid=374810]

--- 2770487864 ns (0.38%), 277 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=374812]

--- 2750448361 ns (0.37%), 275 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=374817]

--- 2740375496 ns (0.37%), 274 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-6 tid=374814]

--- 2630332956 ns (0.36%), 263 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-2 tid=374811]

--- 2520393323 ns (0.34%), 252 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=374813]

--- 2410320656 ns (0.33%), 241 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-7 tid=374815]

--- 2350342333 ns (0.32%), 235 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-4 tid=374816]

--- 2260296341 ns (0.31%), 226 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=374814]

--- 2230320946 ns (0.30%), 223 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-2 tid=374811]

--- 2200392096 ns (0.30%), 220 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=374810]

--- 2170395832 ns (0.29%), 217 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=374817]

--- 2040301383 ns (0.28%), 204 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=374812]

--- 2000277471 ns (0.27%), 200 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=374816]

--- 1960346926 ns (0.27%), 196 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=374812]

--- 1960247965 ns (0.27%), 196 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=374812]

--- 1910357088 ns (0.26%), 191 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=374811]

--- 1850255099 ns (0.25%), 185 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=374815]

--- 1750285271 ns (0.24%), 175 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-4 tid=374816]

--- 1710255606 ns (0.23%), 171 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=374817]

--- 1670175304 ns (0.23%), 167 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=374815]

--- 1660223458 ns (0.22%), 166 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-3 tid=374812]

--- 1660213604 ns (0.22%), 166 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=374816]

--- 1650341468 ns (0.22%), 165 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-8 tid=374817]

--- 1650237680 ns (0.22%), 165 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-2 tid=374811]

--- 1640210874 ns (0.22%), 164 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-6 tid=374814]

--- 1630264671 ns (0.22%), 163 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=374813]

--- 1620283714 ns (0.22%), 162 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=374810]

--- 1600284946 ns (0.22%), 160 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=374815]

--- 1600255374 ns (0.22%), 160 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=374813]

--- 1590221420 ns (0.22%), 159 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=374814]

--- 1580251731 ns (0.21%), 158 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=374811]

--- 1550279105 ns (0.21%), 155 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-7 tid=374815]

--- 1540281115 ns (0.21%), 154 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-5 tid=374813]

--- 1520290401 ns (0.21%), 152 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-1 tid=374810]

--- 1510179253 ns (0.20%), 151 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=374810]

--- 1500239474 ns (0.20%), 150 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=374810]

--- 1500223070 ns (0.20%), 150 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=374814]

--- 1490238686 ns (0.20%), 149 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=374813]

--- 1490195111 ns (0.20%), 149 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=374814]

--- 1490176830 ns (0.20%), 149 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-8 tid=374817]

--- 1480281908 ns (0.20%), 148 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=374813]

--- 1480253601 ns (0.20%), 148 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-2 tid=374811]

--- 1480240638 ns (0.20%), 148 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=374817]

--- 1480190174 ns (0.20%), 148 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-4 tid=374816]

--- 1430268342 ns (0.19%), 143 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=374816]

--- 1430256170 ns (0.19%), 143 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-3 tid=374812]

--- 1430244683 ns (0.19%), 143 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-6 tid=374814]

--- 1420217541 ns (0.19%), 142 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=374817]

--- 1420177042 ns (0.19%), 142 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=374812]

--- 1410211251 ns (0.19%), 141 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-3 tid=374812]

--- 1400214398 ns (0.19%), 140 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=374813]

--- 1400170917 ns (0.19%), 140 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-7 tid=374815]

--- 1400168925 ns (0.19%), 140 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=374811]

--- 1370195535 ns (0.19%), 137 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-1 tid=374810]

--- 1360230469 ns (0.18%), 136 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=374817]

--- 1360198484 ns (0.18%), 136 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-6 tid=374814]

--- 1350218337 ns (0.18%), 135 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=374816]

--- 1330248068 ns (0.18%), 133 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=374811]

--- 1330213845 ns (0.18%), 133 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=374813]

--- 1330201431 ns (0.18%), 133 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-1 tid=374810]

--- 1330170879 ns (0.18%), 133 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=374812]

--- 1320235969 ns (0.18%), 132 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-7 tid=374815]

--- 1320200034 ns (0.18%), 132 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=374814]

--- 1310250529 ns (0.18%), 131 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=374814]

--- 1310193485 ns (0.18%), 131 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-5 tid=374813]

--- 1300192951 ns (0.18%), 130 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=374815]

--- 1300192935 ns (0.18%), 130 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-3 tid=374812]

--- 1280220340 ns (0.17%), 128 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-6 tid=374814]

--- 1280206598 ns (0.17%), 128 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-8 tid=374817]

--- 1280182920 ns (0.17%), 128 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-3 tid=374812]

--- 1270194476 ns (0.17%), 127 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=374810]

--- 1260141092 ns (0.17%), 126 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-4 tid=374816]

--- 1250206731 ns (0.17%), 125 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=374815]

--- 1250203399 ns (0.17%), 125 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=374812]

--- 1240158808 ns (0.17%), 124 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-4 tid=374816]

--- 1240144596 ns (0.17%), 124 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=374810]

--- 1220211221 ns (0.17%), 122 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=374813]

--- 1220191542 ns (0.17%), 122 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=374813]

--- 1210130091 ns (0.16%), 121 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=374810]

--- 1200206603 ns (0.16%), 120 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-8 tid=374817]

--- 1190174756 ns (0.16%), 119 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=374817]

--- 1190157371 ns (0.16%), 119 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=374811]

--- 1170203536 ns (0.16%), 117 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=374814]

--- 1170167742 ns (0.16%), 117 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=374811]

--- 1160186474 ns (0.16%), 116 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=374810]

--- 1160181005 ns (0.16%), 116 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=374817]

--- 1160177529 ns (0.16%), 116 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=374815]

--- 1160176738 ns (0.16%), 116 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=374811]

--- 1150146806 ns (0.16%), 115 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=374816]

--- 1140185157 ns (0.15%), 114 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=374812]

--- 1140130605 ns (0.15%), 114 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-7 tid=374815]

--- 1140124763 ns (0.15%), 114 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=374815]

--- 1120140438 ns (0.15%), 112 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=374814]

--- 1110115574 ns (0.15%), 111 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=374813]

--- 1100192381 ns (0.15%), 110 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=374816]

--- 1100158102 ns (0.15%), 110 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-2 tid=374811]

--- 1090185887 ns (0.15%), 109 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-1 tid=374810]

--- 1090168116 ns (0.15%), 109 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=374812]

--- 1090163479 ns (0.15%), 109 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=374815]

--- 1090137307 ns (0.15%), 109 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801084620.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-2 tid=374811]

--- 1080185692 ns (0.15%), 108 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-2 tid=374811]

--- 1080182496 ns (0.15%), 108 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=374816]

--- 1080181298 ns (0.15%), 108 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=374817]

--- 1080179790 ns (0.15%), 108 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$58.0x0000000801084620.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=374815]

--- 1070167193 ns (0.14%), 107 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=374817]

--- 1070155179 ns (0.14%), 107 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=374810]

--- 1070123164 ns (0.14%), 107 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=374814]

--- 1060204565 ns (0.14%), 106 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-2 tid=374811]

--- 1050158982 ns (0.14%), 105 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=374811]

--- 1050152030 ns (0.14%), 105 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-5 tid=374813]

--- 1050127851 ns (0.14%), 105 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-3 tid=374812]

--- 1050127571 ns (0.14%), 105 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-6 tid=374814]

--- 1040193534 ns (0.14%), 104 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801084620.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=374816]

--- 1040122168 ns (0.14%), 104 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$65.0x00000008010852e0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=374816]

--- 1030120955 ns (0.14%), 103 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-8 tid=374817]

--- 1020139107 ns (0.14%), 102 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-7 tid=374815]

--- 1020109787 ns (0.14%), 102 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-5 tid=374813]

--- 1010188925 ns (0.14%), 101 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-1 tid=374810]

--- 1010157297 ns (0.14%), 101 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-6 tid=374814]

--- 980179222 ns (0.13%), 98 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-8 tid=374817]

--- 980137398 ns (0.13%), 98 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=374813]

--- 970171895 ns (0.13%), 97 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=374817]

--- 970147708 ns (0.13%), 97 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-7 tid=374815]

--- 970090210 ns (0.13%), 97 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-4 tid=374816]

--- 960108285 ns (0.13%), 96 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=374814]

--- 950161277 ns (0.13%), 95 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-2 tid=374811]

--- 950144154 ns (0.13%), 95 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=374812]

--- 940151345 ns (0.13%), 94 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-1 tid=374810]

--- 930157495 ns (0.13%), 93 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-6 tid=374814]

--- 930137357 ns (0.13%), 93 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-1 tid=374810]

--- 930113177 ns (0.13%), 93 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-4 tid=374816]

--- 920167338 ns (0.12%), 92 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$65.0x00000008010852e0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-7 tid=374815]

--- 910155159 ns (0.12%), 91 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=374810]

--- 910151382 ns (0.12%), 91 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-5 tid=374813]

--- 880111433 ns (0.12%), 88 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-3 tid=374812]

--- 870106222 ns (0.12%), 87 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801084620.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=374816]

--- 850170625 ns (0.12%), 85 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=374810]

--- 830141212 ns (0.11%), 83 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-4 tid=374816]

--- 810124273 ns (0.11%), 81 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=374813]

--- 810076054 ns (0.11%), 81 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-6 tid=374814]

--- 800141594 ns (0.11%), 80 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=374815]

--- 800111134 ns (0.11%), 80 samples
  [ 0] Unsafe.getAndBitwiseOrInt
  [ 1] ForkJoinTask.getAndBitwiseOrStatus
  [ 2] ForkJoinTask.setDone
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-5 tid=374813]

--- 800093127 ns (0.11%), 80 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-1 tid=374810]

--- 790144079 ns (0.11%), 79 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-3 tid=374812]

--- 790099250 ns (0.11%), 79 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-7 tid=374815]

--- 780121840 ns (0.11%), 78 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-2 tid=374811]

--- 770119614 ns (0.10%), 77 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-8 tid=374817]

--- 770076031 ns (0.10%), 77 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-1 tid=374810]

--- 760143334 ns (0.10%), 76 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-6 tid=374814]

--- 760110378 ns (0.10%), 76 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=374816]

--- 760103538 ns (0.10%), 76 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-7 tid=374815]

--- 750131054 ns (0.10%), 75 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-7 tid=374815]

--- 750114124 ns (0.10%), 75 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=374814]

--- 740137782 ns (0.10%), 74 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-4 tid=374816]

--- 740118450 ns (0.10%), 74 samples
  [ 0] Unsafe.getAndBitwiseOrInt
  [ 1] ForkJoinTask.getAndBitwiseOrStatus
  [ 2] ForkJoinTask.setDone
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-1 tid=374810]

--- 740112596 ns (0.10%), 74 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-8 tid=374817]

          ns  percent  samples  top
  ----------  -------  -------  ---
 95233930012   12.90%     9522  AbstractOwnableSynchronizer.setExclusiveOwnerThread
 59668772872    8.08%     5966  ReentrantLock$NonfairSync.initialTryLock
 45847088654    6.21%     4584  Thread.interrupted
 28894348024    3.91%     2889  ReentrantLock$Sync.tryRelease
 28403979243    3.85%     2840  ReentrantLock$Sync.isHeldExclusively
 27974244607    3.79%     2797  Cell.lambda$notifyLiveness$0
 26964062284    3.65%     2696  VirtualThread.getAndClearInterrupt
 24013674050    3.25%     2401  AbstractQueuedSynchronizer.compareAndSetState
 23043462616    3.12%     2304  ReentrantLock$Sync.lockInterruptibly
 22633251011    3.07%     2263  AbstractQueuedSynchronizer$ConditionObject.enableWait
 18382815940    2.49%     1838  ReduceOps$5ReducingSink.get
 17282461056    2.34%     1728  VirtualThread.unmount
 16922758669    2.29%     1692  __memmove_sse2_unaligned_erms
 16332237060    2.21%     1633  LinkedBlockingQueue.put
 14932120752    2.02%     1493  Dimensions.forEachRowCol
 12031994316    1.63%     1203  Continuation::prepare_thaw(JavaThread*, bool)
 12031952860    1.63%     1203  AbstractQueuedSynchronizer.acquire
 11141638849    1.51%     1114  ForkJoinPool$WorkQueue.push
 10421530392    1.41%     1042  System$2.setExtentLocalCache
  9791451169    1.33%      979  VirtualThread.runContinuation
  9041266262    1.22%      904  Unsafe.getAndBitwiseAndInt
  8531375715    1.16%      853  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  8161209044    1.11%      816  AbstractQueuedSynchronizer$ConditionObject.signal
  7881167459    1.07%      788  VirtualThread.unpark
  7701051312    1.04%      770  AbstractQueuedSynchronizer$ConditionObject.doSignal
  7440996488    1.01%      744  VirtualThread.compareAndSetState
  7411131930    1.00%      741  AbstractQueuedSynchronizer.enqueue
  7051099357    0.96%      705  Unsafe.getAndBitwiseOrInt
  6670962506    0.90%      667  VirtualThread.afterYield
  6521143948    0.88%      652  ForkJoinTask$RunnableExecuteAction.exec
  5630765100    0.76%      563  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  5530873950    0.75%      553  LinkedBlockingQueue.take
  5020773259    0.68%      502  AbstractQueuedSynchronizer.casTail
  4930778764    0.67%      493  LockSupport.setCurrentBlocker
  4250757988    0.58%      425  VirtualThread.setCarrierThread
  4090556532    0.55%      409  ForkJoinPool$WorkQueue.tryPoll
  4070502607    0.55%      407  ForkJoinPool$WorkQueue.casSlotToNull
  3930569509    0.53%      393  AbstractQueuedSynchronizer.release
  3840663101    0.52%      384  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  3780371258    0.51%      378  ForkJoinPool.scan
  3740572007    0.51%      374  LinkedBlockingQueue.enqueue
  3690536402    0.50%      369  ForkJoinPool$WorkQueue.getAndClearSlot
  3450594475    0.47%      345  Continuation.yield0
  3450501651    0.47%      345  Unsafe.compareAndSetBoolean
  3380578829    0.46%      338  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
  3200473708    0.43%      320  Thread.setContinuation
  3190566997    0.43%      319  SafepointMechanism::update_poll_values(JavaThread*)
  2910417388    0.39%      291  ReentrantLock.lockInterruptibly
  2880517301    0.39%      288  G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
  2850452676    0.39%      285  VirtualThread.mount
  2680391167    0.36%      268  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
  2460331585    0.33%      246  VirtualThread.state
  2330427505    0.32%      233  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  2310337791    0.31%      231  Continuation.run
  2280550004    0.31%      228  AtomicInteger.getAndDecrement
  2070270397    0.28%      207  VirtualThread.park
  1910280666    0.26%      191  LinkedBlockingQueue.dequeue
  1880343344    0.25%      188  AbstractQueuedSynchronizer.signalNext
  1790316862    0.24%      179  ReferencePipeline$4.opWrapSink
  1680258050    0.23%      168  ThreadPoolExecutor$Worker.tryRelease
  1500204360    0.20%      150  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
  1350208391    0.18%      135  Thread.getContinuation
  1240192990    0.17%      124  ArrayList$ArrayListSpliterator.forEachRemaining
  1200173411    0.16%      120  Channel.put
  1180160095    0.16%      118  Continuation.yield
  1150106852    0.16%      115  AbstractQueuedSynchronizer$ConditionNode.<init>
  1140165720    0.15%      114  AbstractPipeline.<init>
  1130186379    0.15%      113  LockSupport.unpark
  1130164616    0.15%      113  StreamSupport.stream
  1000163795    0.14%      100  vtable stub
   960161344    0.13%       96  Unsafe.getAndSetBoolean
   930175150    0.13%       93  ForkJoinPool$WorkQueue.nextLocalTask
   920164177    0.12%       92  Cont thaw
   851575347    0.12%       85  __lock_text_start_[k]
   810092999    0.11%       81  AbstractQueuedSynchronizer$Node.getAndUnsetStatus
   770139580    0.10%       77  ReferencePipeline$3.opWrapSink
   760120373    0.10%       76  ForkJoinPool.poolSubmit
   750144903    0.10%       75  AbstractQueuedSynchronizer$ConditionObject.await
   740081031    0.10%       74  ArrayList.forEach
   710133234    0.10%       71  Sink$ChainedReference.<init>
   690164646    0.09%       69  ForkJoinTask.doExec
   660088241    0.09%       66  Cell$$Lambda$58.0x0000000801084620.accept
   650105224    0.09%       65  Cell.calculateNextState
   620156958    0.08%       62  Thread.clearInterrupt
   550085900    0.07%       55  FreezeBase::freeze_fast_existing_chunk()
   540071713    0.07%       54  AbstractQueuedSynchronizer$Node.setPrevRelaxed
   510053161    0.07%       51  ReferencePipeline.<init>
   500053520    0.07%       50  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   500053117    0.07%       50  AbstractQueuedSynchronizer$ConditionNode.block
   470069252    0.06%       47  AbstractOwnableSynchronizer.getExclusiveOwnerThread
   440081583    0.06%       44  ReferencePipeline$3$1.accept
   440052142    0.06%       44  ForkJoinPool$WorkQueue.topLevelExec
   410084995    0.06%       41  Sink$ChainedReference.begin
   400086821    0.05%       40  ContinuationEntry::flush_stack_processing(JavaThread*) const
   400053504    0.05%       40  Continuation.enterSpecial
   390102568    0.05%       39  ForkJoinPool.awaitWork
   390050305    0.05%       39  VirtualThread.yieldContinuation
   370065390    0.05%       37  StackWatermarkSet::lowest_watermark(JavaThread*)
   370024877    0.05%       37  Sink$ChainedReference.end
   350071549    0.05%       35  memcpy@GLIBC_2.2.5
   330038151    0.04%       33  AtomicInteger.getAndIncrement
   320060730    0.04%       32  AbstractQueuedSynchronizer.setState
   320045144    0.04%       32  System$2.unparkVirtualThread
   300075368    0.04%       30  StackWatermarkSet::after_unwind(JavaThread*)
   300051235    0.04%       30  VirtualThreads.unpark
   290050254    0.04%       29  ForkJoinTask$AdaptedRunnableAction.exec
   290038573    0.04%       29  VirtualThread.getAndSetParkPermit
   270031422    0.04%       27  VirtualThread.submitRunContinuation
   270030917    0.04%       27  ForkJoinPool.signalWork
   260051010    0.04%       26  StreamOpFlag.fromCharacteristics
   260035635    0.04%       26  VirtualThread.setParkPermit
   250049543    0.03%       25  cont_doYield
   240038279    0.03%       24  ForkJoinTask.signalWaiters
   230223336    0.03%       23  __GI___futex_abstimed_wait_cancelable64
   230036951    0.03%       23  Channel.take
   220035118    0.03%       22  memcpy@plt
   200036014    0.03%       20  Cell.run
   190038782    0.03%       19  oopDesc::address_field(int) const
   190023095    0.03%       19  oopDesc::address_field_put(int, unsigned char*)
   190020253    0.03%       19  ForkJoinPool.runWorker
   180140588    0.02%       18  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   180022872    0.02%       18  AbstractQueuedSynchronizer$ConditionNode.isReleasable
   180016326    0.02%       18  Continuation.setMounted
   170049750    0.02%       17  Cell.notifyLiveness
   150013578    0.02%       15  itable stub
   140012745    0.02%       14  LockSupport.park
   140006770    0.02%       14  ForkJoinPool.execute
   130084307    0.02%       13  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
   130048033    0.02%       13  AbstractQueuedSynchronizer.getState
   120052866    0.02%       12  do_user_addr_fault_[k]
   119999568    0.02%       12  ImmutableCollections$ListN.get
   100023477    0.01%       10  StackWatermarkSet::head(JavaThread*)
   100022526    0.01%       10  Thread.isInterrupted
   100006159    0.01%       10  os::vm_page_size()
    90020582    0.01%        9  Collection.stream
    90003546    0.01%        9  Parker::park(bool, long)
    80033635    0.01%        8  ReferencePipeline$3.<init>
    80002123    0.01%        8  Object.<init>
    70023063    0.01%        7  syscall_enter_from_user_mode_[k]
    70022653    0.01%        7  __schedule_[k]
    70002502    0.01%        7  VirtualThread.setState
    60227591    0.01%        6  ___pthread_cond_wait
    60057365    0.01%        6  __tls_get_addr
    60044979    0.01%        6  vframeStream::vframeStream(JavaThread*, bool, bool, bool)
    60044629    0.01%        6  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
    60012371    0.01%        6  ReentrantLock.unlock
    60010726    0.01%        6  VirtualThread$$Lambda$53.0x0000000801036ac8.run
    60009237    0.01%        6  ReferencePipeline$Head.<init>
    60002403    0.01%        6  AbstractPipeline.wrapSink
    50913208    0.01%        5  I2C/C2I adapters
    50235523    0.01%        5  futex_wake_[k]
    50126129    0.01%        5  G1CardSet::occupied() const
    50033985    0.01%        5  exit_to_user_mode_loop_[k]
    50025292    0.01%        5  arch_local_irq_enable_[k]
    50014214    0.01%        5  rebalance_domains_[k]
    50010867    0.01%        5  ArrayList.elementAt
    50009399    0.01%        5  ForkJoinPool$WorkQueue.getAndSetAccess
    49997370    0.01%        5  Objects.requireNonNull
    49993953    0.01%        5  Continuation.mount
    49985500    0.01%        5  __pthread_disable_asynccancel
    40898795    0.01%        4  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
    40243281    0.01%        4  Unsafe_Park
    40040680    0.01%        4  OopMapStream::find_next() [clone .part.0]
    40034384    0.01%        4  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    40016789    0.01%        4  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
    40016385    0.01%        4  clear_page_erms_[k]
    40009539    0.01%        4  ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
    40003618    0.01%        4  __pthread_mutex_lock@GLIBC_2.2.5
    40003374    0.01%        4  System$2.parkVirtualThread
    39999625    0.01%        4  OptoRuntime::new_instance_C(Klass*, JavaThread*)
    39997078    0.01%        4  AbstractQueuedSynchronizer.acquireInterruptibly
    30242692    0.00%        3  __x64_sys_futex_[k]
    30028748    0.00%        3  void stackChunkOopDesc::iterate_stack<(ChunkFrames)0, TransformStackChunkClosure<(OopKind)0> >(TransformStackChunkClosure<(OopKind)0>*)
    30023080    0.00%        3  __memset_avx2_erms
    30011282    0.00%        3  __memset_avx2_unaligned_erms
    30005744    0.00%        3  slab_free_freelist_hook.constprop.0_[k]
    30005086    0.00%        3  void stackChunkOopDesc::fix_thawed_frame<SmallRegisterMap>(frame const&, SmallRegisterMap const*)
    30003154    0.00%        3  ForkJoinPool.unmanagedBlock
    30002893    0.00%        3  G1CollectedHeap::attempt_allocation_slow(unsigned long)
    30002055    0.00%        3  __pthread_enable_asynccancel
    29999511    0.00%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)0, 286822ul>::oop_access_barrier(void*, oopDesc*)
    20447139    0.00%        2  VirtualThread.start
    20234878    0.00%        2  __GI___pthread_cond_signal
    20230346    0.00%        2  Unsafe_Unpark
    20028480    0.00%        2  finish_task_switch.isra.0_[k]
    20018562    0.00%        2  __softirqentry_text_start_[k]
    20015991    0.00%        2  __run_timers.part.0_[k]
    20011333    0.00%        2  futex_wait_[k]
    20010156    0.00%        2  VirtualThreads.park
    20009329    0.00%        2  syscall_exit_to_user_mode_[k]
    20008176    0.00%        2  __next_zones_zonelist_[k]
    20007927    0.00%        2  handle_pte_fault_[k]
    20007450    0.00%        2  load_balance_[k]
    20006884    0.00%        2  ThawBase::thaw_slow(stackChunkOopDesc*, bool)
    20006534    0.00%        2  rcu_work_rcufn_[k]
    20006262    0.00%        2  lru_cache_add_inactive_or_unevictable_[k]
    20005768    0.00%        2  wake_q_add_safe_[k]
    20005598    0.00%        2  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
    20005318    0.00%        2  ThawBase::recurse_thaw_interpreted_frame(frame const&, frame&, int)
    20005270    0.00%        2  CodeHeap::find_blob_unsafe(void*) const
