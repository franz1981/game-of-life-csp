--- Execution profile ---
Total samples       : 5120450
unknown_Java        : 14840 (0.29%)
not_walkable_Java   : 208 (0.00%)
skipped             : 1925 (0.04%)

--- 918941707 total (17.95%), 919270 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 314012437 total (6.13%), 314150 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 290843742 total (5.68%), 290935 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 235102612 total (4.59%), 235048 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 227379245 total (4.44%), 227486 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 172310645 total (3.37%), 172493 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 156438282 total (3.06%), 156139 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 137570283 total (2.69%), 137347 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 135182408 total (2.64%), 134839 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 122961744 total (2.40%), 123139 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 100387847 total (1.96%), 100550 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 85974648 total (1.68%), 85754 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 85883529 total (1.68%), 86033 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 62880768 total (1.23%), 62914 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 60457633 total (1.18%), 60320 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 57583887 total (1.13%), 57680 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 56950953 total (1.11%), 57087 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 54579149 total (1.07%), 54598 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 53900142 total (1.05%), 54013 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 53626307 total (1.05%), 53754 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 51545049 total (1.01%), 51740 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 48969861 total (0.96%), 48926 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 39872966 total (0.78%), 39852 samples
  [ 0] G1BlockOffsetTablePart::block_start(void const*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 38445389 total (0.75%), 38626 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 36792454 total (0.72%), 36711 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 33521700 total (0.65%), 33509 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 32961697 total (0.64%), 32835 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 32086888 total (0.63%), 32234 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] GameOfLife.lambda$calculateFrame$6
  [ 3] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 31213577 total (0.61%), 31095 samples
  [ 0] Channel.take
  [ 1] Cell.notifyLiveness
  [ 2] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 30228352 total (0.59%), 30155 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 29055364 total (0.57%), 29084 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$58.0x0000000801085b30.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run

--- 28997945 total (0.57%), 29029 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$54.0x00000008010852b0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 28877527 total (0.56%), 28789 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife.lambda$calculateFrame$6
  [ 7] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 28506628 total (0.56%), 28448 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 28212163 total (0.55%), 28260 samples
  [ 0] G1HotCardCache::insert(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 27404582 total (0.54%), 27435 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 25032363 total (0.49%), 24923 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 24789597 total (0.48%), 24755 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 24372252 total (0.48%), 24448 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 23859024 total (0.47%), 23861 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 23338953 total (0.46%), 23364 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$54.0x00000008010852b0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 22004020 total (0.43%), 21944 samples
  [ 0] Channel.take
  [ 1] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 2] ReferencePipeline$3$1.accept
  [ 3] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 4] AbstractPipeline.copyInto
  [ 5] AbstractPipeline.wrapAndCopyInto
  [ 6] ReduceOps$ReduceOp.evaluateSequential
  [ 7] AbstractPipeline.evaluate
  [ 8] IntPipeline.reduce
  [ 9] IntPipeline.sum
  [10] Cell.calculateNextState
  [11] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 21819195 total (0.43%), 21828 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 21728479 total (0.42%), 21731 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] WorkerThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 20233441 total (0.40%), 20189 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 19017022 total (0.37%), 18932 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 17202822 total (0.34%), 17218 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 16794703 total (0.33%), 16728 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 16215054 total (0.32%), 16231 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 14979599 total (0.29%), 14924 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 14845085 total (0.29%), 14883 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 14534471 total (0.28%), 14472 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 14514301 total (0.28%), 14505 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 13875346 total (0.27%), 13890 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 13387643 total (0.26%), 13403 samples
  [ 0] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 13305063 total (0.26%), 13324 samples
  [ 0] GameOfLife.lambda$calculateFrame$5
  [ 1] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$7
  [ 5] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 12987098 total (0.25%), 12994 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] GameOfLife.lambda$calculateFrame$5
  [ 5] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 12523267 total (0.24%), 12540 samples
  [ 0] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 12374524 total (0.24%), 12449 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife.lambda$calculateFrame$6
  [ 5] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 11786864 total (0.23%), 11799 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.dequeue
  [ 6] LinkedBlockingQueue.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run

--- 11640991 total (0.23%), 11638 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] GameOfLife.lambda$calculateFrame$5
  [ 3] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 11416274 total (0.22%), 11403 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] GameOfLife.lambda$calculateFrame$5
  [ 4] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 10898575 total (0.21%), 10914 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 10546195 total (0.21%), 10571 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 10251589 total (0.20%), 10263 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell$$Lambda$58.0x0000000801085b30.apply
  [11] ReferencePipeline$3$1.accept
  [12] ArrayList$ArrayListSpliterator.forEachRemaining
  [13] AbstractPipeline.copyInto
  [14] AbstractPipeline.wrapAndCopyInto
  [15] ReduceOps$ReduceOp.evaluateSequential
  [16] AbstractPipeline.evaluate
  [17] IntPipeline.reduce
  [18] IntPipeline.sum
  [19] Cell.calculateNextState
  [20] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [21] Iterable.forEach
  [22] CellsGroup.run
  [23] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [24] ThreadPoolExecutor.runWorker
  [25] ThreadPoolExecutor$Worker.run
  [26] Thread.run

--- 9996237 total (0.20%), 10007 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.lambda$notifyLiveness$0
  [11] Cell$$Lambda$54.0x00000008010852b0.accept
  [12] ArrayList.forEach
  [13] Cell.notifyLiveness
  [14] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 9977228 total (0.19%), 9974 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 9940382 total (0.19%), 9949 samples
  [ 0] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 1] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 2] G1ConcurrentRefineThread::run_service()
  [ 3] ConcurrentGCThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 9782211 total (0.19%), 9795 samples
  [ 0] __tls_get_addr
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 9772532 total (0.19%), 9754 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 9752884 total (0.19%), 9772 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 9632254 total (0.19%), 9642 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell$$Lambda$58.0x0000000801085b30.apply
  [11] ReferencePipeline$3$1.accept
  [12] ArrayList$ArrayListSpliterator.forEachRemaining
  [13] AbstractPipeline.copyInto
  [14] AbstractPipeline.wrapAndCopyInto
  [15] ReduceOps$ReduceOp.evaluateSequential
  [16] AbstractPipeline.evaluate
  [17] IntPipeline.reduce
  [18] IntPipeline.sum
  [19] Cell.calculateNextState
  [20] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [21] Iterable.forEach
  [22] CellsGroup.run
  [23] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [24] ThreadPoolExecutor.runWorker
  [25] ThreadPoolExecutor$Worker.run
  [26] Thread.run

--- 9532758 total (0.19%), 9542 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.lambda$notifyLiveness$0
  [11] Cell$$Lambda$54.0x00000008010852b0.accept
  [12] ArrayList.forEach
  [13] Cell.notifyLiveness
  [14] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 8935988 total (0.17%), 8883 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 8794799 total (0.17%), 8793 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 8417890 total (0.16%), 8411 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 8401639 total (0.16%), 8394 samples
  [ 0] void OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 8324904 total (0.16%), 8285 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 8277700 total (0.16%), 8287 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] LinkedBlockingQueue.enqueue
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 8211761 total (0.16%), 8206 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife.lambda$calculateFrame$6
  [ 7] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 7773265 total (0.15%), 7781 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] LinkedBlockingQueue.enqueue
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 7631515 total (0.15%), 7648 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 7294046 total (0.14%), 7316 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 7081335 total (0.14%), 7078 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 7038270 total (0.14%), 7050 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 6972930 total (0.14%), 6965 samples
  [ 0] G1BlockOffsetTablePart::block_start(void const*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 6709145 total (0.13%), 6726 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 6350854 total (0.12%), 6334 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 6343299 total (0.12%), 6350 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 6165302 total (0.12%), 6171 samples
  [ 0] Object.<init>
  [ 1] PipelineHelper.<init>
  [ 2] AbstractPipeline.<init>
  [ 3] ReferencePipeline.<init>
  [ 4] ReferencePipeline$Head.<init>
  [ 5] StreamSupport.stream
  [ 6] Collection.stream
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 6119833 total (0.12%), 6130 samples
  [ 0] GameOfLife.lambda$calculateFrame$6
  [ 1] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$7
  [ 5] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 5900643 total (0.12%), 5869 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 5899399 total (0.12%), 5903 samples
  [ 0] StreamSupport.stream
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 5357746 total (0.10%), 5369 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5188584 total (0.10%), 5201 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 5158699 total (0.10%), 5170 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5087349 total (0.10%), 5075 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 5071324 total (0.10%), 5071 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 4989848 total (0.10%), 4995 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] GameOfLife.lambda$calculateFrame$5
  [12] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [13] Dimensions.forEachRowCol
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$7
  [16] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 4868634 total (0.10%), 4872 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 4567371 total (0.09%), 4567 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4557716 total (0.09%), 4562 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 4511871 total (0.09%), 4518 samples
  [ 0] G1CardSet::add_card(unsigned long)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 5] G1ConcurrentRefineThread::run_service()
  [ 6] ConcurrentGCThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 4448853 total (0.09%), 4447 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 4437787 total (0.09%), 4447 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$54.0x00000008010852b0.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 4278986 total (0.08%), 4284 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] LinkedBlockingQueue.dequeue
  [ 5] LinkedBlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

--- 4259021 total (0.08%), 4238 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 4248012 total (0.08%), 4269 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 4245789 total (0.08%), 4256 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 7] ReentrantLock$NonfairSync.initialTryLock
  [ 8] ReentrantLock$Sync.lockInterruptibly
  [ 9] ReentrantLock.lockInterruptibly
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$58.0x0000000801085b30.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run

--- 4075831 total (0.08%), 4044 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 4041302 total (0.08%), 4042 samples
  [ 0] Channel.take
  [ 1] [unknown_Java]

--- 4040992 total (0.08%), 4051 samples
  [ 0] vtable stub
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 4034901 total (0.08%), 4039 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] LinkedBlockingQueue.dequeue
  [ 5] LinkedBlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

--- 4032910 total (0.08%), 4033 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] WorkerThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 3927237 total (0.08%), 3929 samples
  [ 0] G1CardCounts::add_card_count(unsigned char*)
  [ 1] G1RemSet::clean_card_before_refine(unsigned char**)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 3912810 total (0.08%), 3913 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3783945 total (0.07%), 3779 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 3776963 total (0.07%), 3773 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] [unknown_Java]

--- 3701717 total (0.07%), 3704 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3595624 total (0.07%), 3593 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3585615 total (0.07%), 3594 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] LinkedBlockingQueue.enqueue
  [ 7] LinkedBlockingQueue.put
  [ 8] Channel.put
  [ 9] Cell.lambda$notifyLiveness$0
  [10] Cell$$Lambda$54.0x00000008010852b0.accept
  [11] ArrayList.forEach
  [12] Cell.notifyLiveness
  [13] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 3112515 total (0.06%), 3117 samples
  [ 0] _dl_update_slotinfo
  [ 1] [unknown]

--- 2955187 total (0.06%), 2972 samples
  [ 0] itable stub
  [ 1] Dimensions.forEachRowCol
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$7
  [ 4] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 2932207 total (0.06%), 2919 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] GameOfLife.lambda$calculateFrame$5
  [ 3] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 2795997 total (0.05%), 2791 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$54.0x00000008010852b0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 2784045 total (0.05%), 2779 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$58.0x0000000801085b30.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run

--- 2655374 total (0.05%), 2665 samples
  [ 0] ArrayList.spliterator
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 2606013 total (0.05%), 2598 samples
  [ 0] Channel.take
  [ 1] GameOfLife.lambda$calculateFrame$6
  [ 2] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] GameOfLife.calculateFrame
  [ 5] GameOfLife.lambda$calculateFrameBlocking$7
  [ 6] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 2603272 total (0.05%), 2606 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 2599162 total (0.05%), 2608 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 2570918 total (0.05%), 2579 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2526546 total (0.05%), 2528 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 2514665 total (0.05%), 2522 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 2480523 total (0.05%), 2486 samples
  [ 0] AbstractQueuedSynchronizer.getState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 2442115 total (0.05%), 2443 samples
  [ 0] void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
  [ 1] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 2] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 3] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 4] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 5] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 6] WorkerThread::run()
  [ 7] Thread::call_run()
  [ 8] thread_native_entry(Thread*)
  [ 9] start_thread

--- 2371899 total (0.05%), 2378 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 2343270 total (0.05%), 2339 samples
  [ 0] oopDesc::size()
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$54.0x00000008010852b0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 2308066 total (0.05%), 2315 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2294518 total (0.04%), 2301 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 2282936 total (0.04%), 2290 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 2269542 total (0.04%), 2271 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 2258635 total (0.04%), 2261 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 2241000 total (0.04%), 2247 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 2217195 total (0.04%), 2220 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] [unknown_Java]

--- 2206361 total (0.04%), 2213 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 2166989 total (0.04%), 2174 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 2161747 total (0.04%), 2164 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2120579 total (0.04%), 2124 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
  [ 2] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 3] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 4] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 5] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 6] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 7] G1ConcurrentRefineThread::run_service()
  [ 8] ConcurrentGCThread::run()
  [ 9] Thread::call_run()
  [10] thread_native_entry(Thread*)
  [11] start_thread

--- 2114682 total (0.04%), 2118 samples
  [ 0] G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
  [ 1] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 2] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 3] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 4] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 6] G1ConcurrentRefineThread::run_service()
  [ 7] ConcurrentGCThread::run()
  [ 8] Thread::call_run()
  [ 9] thread_native_entry(Thread*)
  [10] start_thread

--- 2104040 total (0.04%), 2112 samples
  [ 0] itable stub
  [ 1] Dimensions.forEachRowCol
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$7
  [ 4] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 2084287 total (0.04%), 2087 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2049809 total (0.04%), 2062 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 4] ThreadPoolExecutor.runWorker
  [ 5] ThreadPoolExecutor$Worker.run
  [ 6] Thread.run

--- 2040148 total (0.04%), 2043 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.lambda$notifyLiveness$0
  [11] Cell$$Lambda$54.0x00000008010852b0.accept
  [12] ArrayList.forEach
  [13] Cell.notifyLiveness
  [14] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 2038551 total (0.04%), 2046 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 2034401 total (0.04%), 2037 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell$$Lambda$58.0x0000000801085b30.apply
  [11] ReferencePipeline$3$1.accept
  [12] ArrayList$ArrayListSpliterator.forEachRemaining
  [13] AbstractPipeline.copyInto
  [14] AbstractPipeline.wrapAndCopyInto
  [15] ReduceOps$ReduceOp.evaluateSequential
  [16] AbstractPipeline.evaluate
  [17] IntPipeline.reduce
  [18] IntPipeline.sum
  [19] Cell.calculateNextState
  [20] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [21] Iterable.forEach
  [22] CellsGroup.run
  [23] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [24] ThreadPoolExecutor.runWorker
  [25] ThreadPoolExecutor$Worker.run
  [26] Thread.run

--- 2005851 total (0.04%), 2007 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 1960715 total (0.04%), 1953 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1934626 total (0.04%), 1943 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1931473 total (0.04%), 1933 samples
  [ 0] Cell.calculateNextState
  [ 1] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 1922462 total (0.04%), 1921 samples
  [ 0] StreamSupport.stream
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1906061 total (0.04%), 1912 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$4$1.<init>
  [ 2] ReferencePipeline$4.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 1879497 total (0.04%), 1881 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1872244 total (0.04%), 1884 samples
  [ 0] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$7
  [ 4] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 1802859 total (0.04%), 1805 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] LinkedBlockingQueue.enqueue
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1771572 total (0.03%), 1776 samples
  [ 0] LinkedBlockingQueue.signalNotEmpty
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1767822 total (0.03%), 1767 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] GameOfLife.lambda$calculateFrame$5
  [ 4] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 1766744 total (0.03%), 1769 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] GameOfLife.lambda$calculateFrame$5
  [11] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [12] Dimensions.forEachRowCol
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$7
  [15] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1760423 total (0.03%), 1765 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 2] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 3] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 5] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 6] LinkedBlockingQueue.dequeue
  [ 7] LinkedBlockingQueue.take
  [ 8] Channel.take
  [ 9] Cell$$Lambda$58.0x0000000801085b30.apply
  [10] ReferencePipeline$3$1.accept
  [11] ArrayList$ArrayListSpliterator.forEachRemaining
  [12] AbstractPipeline.copyInto
  [13] AbstractPipeline.wrapAndCopyInto
  [14] ReduceOps$ReduceOp.evaluateSequential
  [15] AbstractPipeline.evaluate
  [16] IntPipeline.reduce
  [17] IntPipeline.sum
  [18] Cell.calculateNextState
  [19] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [20] Iterable.forEach
  [21] CellsGroup.run
  [22] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [23] ThreadPoolExecutor.runWorker
  [24] ThreadPoolExecutor$Worker.run
  [25] Thread.run

--- 1721564 total (0.03%), 1723 samples
  [ 0] Objects.requireNonNull
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 1679100 total (0.03%), 1681 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] GameOfLife.lambda$calculateFrame$5
  [11] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [12] Dimensions.forEachRowCol
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$7
  [15] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1670033 total (0.03%), 1670 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$54.0x00000008010852b0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 1655700 total (0.03%), 1655 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$58.0x0000000801085b30.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run

--- 1650592 total (0.03%), 1655 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1627497 total (0.03%), 1622 samples
  [ 0] GlobalCounter::write_synchronize()
  [ 1] FreeListAllocator::release(void*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1624056 total (0.03%), 1626 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.calculateNextState
  [11] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1546874 total (0.03%), 1549 samples
  [ 0] G1CardSet::add_card(unsigned long)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1544773 total (0.03%), 1535 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1530960 total (0.03%), 1532 samples
  [ 0] ReferencePipeline.map
  [ 1] Cell.calculateNextState
  [ 2] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1528688 total (0.03%), 1523 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] GameOfLife.lambda$calculateFrame$6
  [ 3] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 1512740 total (0.03%), 1522 samples
  [ 0] GameOfLife.lambda$calculateFrame$6
  [ 1] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$7
  [ 5] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1504021 total (0.03%), 1498 samples
  [ 0] ArrayList.forEach
  [ 1] Cell.notifyLiveness
  [ 2] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1480298 total (0.03%), 1480 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1479474 total (0.03%), 1481 samples
  [ 0] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 1] G1ConcurrentRefineThread::run_service()
  [ 2] ConcurrentGCThread::run()
  [ 3] Thread::call_run()
  [ 4] thread_native_entry(Thread*)
  [ 5] start_thread

--- 1454610 total (0.03%), 1462 samples
  [ 0] ReentrantLock.lock
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$54.0x00000008010852b0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1429218 total (0.03%), 1431 samples
  [ 0] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 4] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 5] ReentrantLock$NonfairSync.initialTryLock
  [ 6] ReentrantLock$Sync.lockInterruptibly
  [ 7] ReentrantLock.lockInterruptibly
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.calculateNextState
  [11] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1411971 total (0.03%), 1412 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 1400391 total (0.03%), 1404 samples
  [ 0] ReferencePipeline$3.<init>
  [ 1] ReferencePipeline.map
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1377666 total (0.03%), 1378 samples
  [ 0] G1BlockOffsetTablePart::block_start(void const*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$54.0x00000008010852b0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 1373778 total (0.03%), 1377 samples
  [ 0] Thread.interrupted
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife.lambda$calculateFrame$6
  [ 5] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1352228 total (0.03%), 1352 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] LinkedBlockingQueue.enqueue
  [ 6] LinkedBlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$54.0x00000008010852b0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$48.0x0000000801084430.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1339096 total (0.03%), 1340 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 1327917 total (0.03%), 1334 samples
  [ 0] ImmutableCollections$ListN.get
  [ 1] GameOfLife.lambda$calculateFrame$6
  [ 2] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] GameOfLife.calculateFrame
  [ 5] GameOfLife.lambda$calculateFrameBlocking$7
  [ 6] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1327653 total (0.03%), 1327 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife.lambda$calculateFrame$6
  [ 5] GameOfLife$$Lambda$55.0x00000008010854d0.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1323239 total (0.03%), 1328 samples
  [ 0] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$7
  [ 4] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 1303956 total (0.03%), 1306 samples
  [ 0] G1CardSet::add_card(unsigned int, unsigned int, bool)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1303938 total (0.03%), 1305 samples
  [ 0] G1BlockOffsetTablePart::block_start(void const*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
  [ 4] G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
  [ 5] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 6] ReentrantLock$NonfairSync.initialTryLock
  [ 7] ReentrantLock$Sync.lockInterruptibly
  [ 8] ReentrantLock.lockInterruptibly
  [ 9] LinkedBlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$58.0x0000000801085b30.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run

--- 1292550 total (0.03%), 1295 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$53.0x0000000801085090.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$52.0x0000000801084c90.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1288196 total (0.03%), 1289 samples
  [ 0] Channel.take
  [ 1] Cell$$Lambda$58.0x0000000801085b30.apply
  [ 2] ReferencePipeline$3$1.accept
  [ 3] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 4] AbstractPipeline.copyInto
  [ 5] AbstractPipeline.wrapAndCopyInto
  [ 6] ReduceOps$ReduceOp.evaluateSequential
  [ 7] AbstractPipeline.evaluate
  [ 8] IntPipeline.reduce
  [ 9] IntPipeline.sum
  [10] Cell.calculateNextState
  [11] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1272151 total (0.02%), 1275 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1250474 total (0.02%), 1256 samples
  [ 0] CellsGroup$$Lambda$56.0x00000008010856f0.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] ThreadPerCoreGameOfLife$$Lambda$47.0x0000000801084220.run
  [ 4] ThreadPoolExecutor.runWorker
  [ 5] ThreadPoolExecutor$Worker.run
  [ 6] Thread.run

       total  percent  samples  top
  ----------  -------  -------  ---
  1106620536   21.62%  1107115  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
   584698061   11.42%   584943  AbstractQueuedSynchronizer.compareAndSetState
   451819283    8.83%   451758  oopDesc::size()
   329577448    6.44%   329708  G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
   240616719    4.70%   240138  Thread.interrupted
   235112605    4.59%   235058  ReduceOps$5ReducingSink.get
   189445885    3.70%   189732  AbstractQueuedSynchronizer.release
   182763988    3.57%   183099  AbstractOwnableSynchronizer.setExclusiveOwnerThread
   179043670    3.50%   179002  LinkedBlockingQueue.dequeue
   161824992    3.16%   162000  LinkedBlockingQueue.take
   159053821    3.11%   158616  Thread.getAndClearInterrupt
   157366106    3.07%   157425  LinkedBlockingQueue.put
   141849218    2.77%   142070  G1CardSet::add_card(unsigned int, unsigned int, bool)
   137611348    2.69%   137388  Cell.lambda$notifyLiveness$0
   102021805    1.99%   101978  LinkedBlockingQueue.enqueue
    63304912    1.24%    63122  Channel.take
    57150842    1.12%    57107  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
    53130933    1.04%    53104  G1BlockOffsetTablePart::block_start(void const*)
    42112095    0.82%    42105  AtomicInteger.getAndDecrement
    37554610    0.73%    37542  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
    32764553    0.64%    32837  G1HotCardCache::insert(unsigned char*)
    24640196    0.48%    24618  ReentrantLock.lockInterruptibly
    21728479    0.42%    21731  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    19699335    0.38%    19726  ReentrantLock$Sync.lockInterruptibly
    15558994    0.30%    15580  G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
    15307617    0.30%    15321  AtomicInteger.getAndIncrement
    14653063    0.29%    14659  AbstractPipeline.<init>
    14371008    0.28%    14398  G1RemSet::clean_card_before_refine(unsigned char**)
    14208524    0.28%    14176  AbstractQueuedSynchronizer.signalNext
    13547365    0.26%    13567  GameOfLife.lambda$calculateFrame$5
    12306395    0.24%    12325  __tls_get_addr
    11448065    0.22%    11460  G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
    10621454    0.21%    10614  void OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion)
    10589088    0.21%    10614  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    10109171    0.20%    10091  Channel.put
     9953998    0.19%     9974  AbstractQueuedSynchronizer$ConditionObject.signal
     9349966    0.18%     9379  GameOfLife.lambda$calculateFrame$6
     8598413    0.17%     8621  ReentrantLock$Sync.tryRelease
     8465787    0.17%     8487  AbstractQueuedSynchronizer.setState
     7890709    0.15%     7893  StreamSupport.stream
     7168118    0.14%     7173  StreamOpFlag.fromCharacteristics
     6831705    0.13%     6842  G1CardSet::add_card(unsigned long)
     6816643    0.13%     6843  ReentrantLock$Sync.lock
     6680160    0.13%     6686  Object.<init>
     6343761    0.12%     6358  ReferencePipeline$4.opWrapSink
     5579601    0.11%     5590  G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
     5221078    0.10%     5234  AbstractOwnableSynchronizer.getExclusiveOwnerThread
     5200444    0.10%     5217  Sink$ChainedReference.<init>
     5059227    0.10%     5084  itable stub
     4857127    0.09%     4881  Dimensions.forEachRowCol
     4836685    0.09%     4847  ReentrantLock$Sync.isHeldExclusively
     4443719    0.09%     4448  G1CardCounts::add_card_count(unsigned char*)
     4044019    0.08%     4054  vtable stub
     3973089    0.08%     3982  AbstractQueuedSynchronizer.getState
     3902763    0.08%     3927  GameOfLife$$Lambda$55.0x00000008010854d0.accept
     3419295    0.07%     3430  ReferencePipeline$3.opWrapSink
     3112515    0.06%     3117  _dl_update_slotinfo
     3002905    0.06%     3004  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     2902690    0.06%     2910  LinkedBlockingQueue.signalNotEmpty
     2855887    0.06%     2865  ArrayList.spliterator
     2846636    0.06%     2861  ImmutableCollections$ListN.get
     2705484    0.05%     2697  GlobalCounter::write_synchronize()
     2626543    0.05%     2579  psi_group_change_[k]
     2391426    0.05%     2401  ReentrantLock.lock
     2374514    0.05%     2386  Sink$ChainedReference.begin
     2229850    0.04%     2224  ArrayList.forEach
     2015498    0.04%     2014  ArrayList$SubList$1.next
     1993121    0.04%     1998  CellsGroup$$Lambda$56.0x00000008010856f0.accept
     1981326    0.04%     1991  Sink$ChainedReference.end
     1974191    0.04%     1982  GameOfLife$$Lambda$53.0x0000000801085090.accept
     1931975    0.04%     1940  FreeListAllocator::allocate()
     1931473    0.04%     1933  Cell.calculateNextState
     1827207    0.04%     1770  __update_blocked_fair_[k]
     1739542    0.03%     1701  __update_load_avg_se_[k]
     1738052    0.03%     1747  G1DirtyCardQueueSet::handle_completed_buffer(BufferNode*, G1ConcurrentRefineStats*)
     1721564    0.03%     1723  Objects.requireNonNull
     1609825    0.03%     1611  ReferencePipeline.map
     1526158    0.03%     1529  AtomicInteger.get
     1486467    0.03%     1488  G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
     1486391    0.03%     1454  __update_load_avg_cfs_rq_[k]
     1400391    0.03%     1404  ReferencePipeline$3.<init>
     1394276    0.03%     1394  Iterable.forEach
     1230880    0.02%     1233  G1CardCounts::is_hot(unsigned int)
     1203121    0.02%     1171  __hrtimer_run_queues_[k]
     1153340    0.02%     1127  update_curr_[k]
     1148028    0.02%     1150  __tls_get_addr_slow
     1142120    0.02%     1144  __tls_get_addr@plt
     1139444    0.02%     1138  G1DirtyCardQueueSet::dequeue_completed_buffer()
     1100814    0.02%     1102  G1PostEvacuateCollectionSetCleanupTask2::RedirtyLoggedCardsTask::do_work(unsigned int)
     1071851    0.02%     1074  update_get_addr
     1050736    0.02%     1028  update_load_avg_[k]
     1047560    0.02%     1054  Integer.intValue
      999324    0.02%     1002  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
      986915    0.02%      991  G1BarrierSetRuntime::write_ref_field_post_entry(unsigned char volatile*, JavaThread*)
      948607    0.02%      912  copy_kernel_to_fpregs_[k]
      866441    0.02%      869  void QuickSort::inner_sort<false, unsigned char*, int (*)(unsigned char const*, unsigned char const*)>(unsigned char**, unsigned long, int (*)(unsigned char const*, unsigned char const*)) [clone .constprop.0]
      780657    0.02%      764  psi_task_switch_[k]
      779203    0.02%      781  Integer.valueOf
      772254    0.02%      755  _raw_spin_lock_[k]
      690109    0.01%      684  _int_malloc
      686080    0.01%      684  G1SegmentedArray::allocate()
      682602    0.01%      685  [vdso]
      672551    0.01%      674  ArrayList$SubList$1.checkForComodification
      672420    0.01%      654  _raw_spin_lock_irqsave_[k]
      672305    0.01%      658  timerqueue_add_[k]
      656300    0.01%      641  update_min_vruntime_[k]
      645468    0.01%      646  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
      641058    0.01%      640  __pthread_mutex_lock@GLIBC_2.2.5
      626432    0.01%      629  Unsafe_Park
      544660    0.01%      546  AbstractPipeline.wrapSink
      542047    0.01%      537  __malloc
      534378    0.01%      535  AbstractQueuedSynchronizer$ConditionObject.enableWait
      528914    0.01%      519  psi_task_change_[k]
      518686    0.01%      520  __clock_gettime_2
      511783    0.01%      510  DirectMethodHandle$Holder.newInvokeSpecial
      500317    0.01%      502  LockSupport.setCurrentBlocker
      492773    0.01%      480  hrtimer_interrupt_[k]
      478976    0.01%      475  CellsGroup.run
      476781    0.01%      466  asm_sysvec_apic_timer_interrupt_[k]
      458960    0.01%      449  cpuacct_charge_[k]
      451324    0.01%      439  rb_next_[k]
      437470    0.01%      428  __calc_delta_[k]
      417664    0.01%      418  FreeListAllocator::release(void*)
      402836    0.01%      403  ___pthread_cond_wait
      400759    0.01%      402  ___pthread_mutex_unlock
      399994    0.01%      391  native_sched_clock_[k]
      395982    0.01%      386  update_process_times_[k]
      382841    0.01%      383  Cell$$Lambda$54.0x00000008010852b0.accept
      382437    0.01%      383  ReferencePipeline.<init>
      358559    0.01%      350  update_rq_clock_[k]
      351456    0.01%      346  __memset_avx2_unaligned_erms
      340569    0.01%      340  ArrayList$ArrayListSpliterator.characteristics
      339711    0.01%      340  ArrayList$SubList$1.hasNext
      324975    0.01%      318  __schedule_[k]
      324692    0.01%      318  ktime_get_[k]
      313092    0.01%      313  G1CardSet::coarsen_container(void* volatile*, void*, unsigned int, bool)
      309051    0.01%      310  PtrQueueSet::try_enqueue(PtrQueue&, void*)
      305845    0.01%      304  __memset_avx2_erms
      300650    0.01%      294  select_task_rq_fair_[k]
      299738    0.01%      300  G1MergeHeapRootsTask::work(unsigned int)
      297503    0.01%      291  kmem_cache_free_[k]
      296353    0.01%      297  os::elapsed_counter()
      295042    0.01%      288  load_balance_[k]
      291048    0.01%      284  account_user_time_[k]
      287631    0.01%      288  AbstractQueuedSynchronizer.acquire
      286443    0.01%      281  _find_next_bit_[k]
      286193    0.01%      288  Boolean.booleanValue
      284505    0.01%      279  perf_event_context_sched_out_[k]
      280568    0.01%      273  timekeeping_advance_[k]
      280419    0.01%      281  clock_gettime@plt
      271725    0.01%      271  ArrayList.elementAt
      270765    0.01%      266  enqueue_entity_[k]
      270020    0.01%      270  Parker::park(bool, long)
      268616    0.01%      269  Unsafe.park
      268452    0.01%      270  G1DirtyCardQueueSet::enqueue(G1DirtyCardQueue&, unsigned char volatile*)
      267403    0.01%      269  PtrQueueSet::exchange_buffer_with_new(PtrQueue&)
      257426    0.01%      257  _int_free
      254731    0.00%      249  exit_to_user_mode_prepare_[k]
      247575    0.00%      248  LambdaForm$MH.0x0000000801002800.invoke
      247463    0.00%      243  select_idle_sibling_[k]
      245766    0.00%      247  native_write_msr_[k]
      245384    0.00%      239  __cgroup_account_cputime_field_[k]
      242556    0.00%      242  NonJavaThread::Iterator::step()
      241674    0.00%      236  try_to_wake_up_[k]
      240316    0.00%      241  G1HeapRegionRemSetMergeCardClosure<G1MergeHeapRootsTask::G1MergeCardSetClosure, G1ContainerCardsOrRanges>::do_containerptr(unsigned int, unsigned long, void*)
      237311    0.00%      233  update_sg_lb_stats_[k]
      234406    0.00%      229  read_tsc_[k]
      230610    0.00%      231  I2C/C2I adapters
      225951    0.00%      226  SpinYield::SpinYield(unsigned int, unsigned int, unsigned int)
      222568    0.00%      223  G1RedirtyCardsLocalQueueSet::enqueue(void*)
      222523    0.00%      220  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
      219216    0.00%      215  rb_insert_color_[k]
      218959    0.00%      214  task_tick_fair_[k]
      218201    0.00%      217  AbstractQueuedSynchronizer$ConditionObject.doSignal
      215627    0.00%      212  select_idle_cpu_[k]
      215613    0.00%      216  calc_thresholds(unsigned long, unsigned long, unsigned int)
      213680    0.00%      210  update_cfs_group_[k]
      212954    0.00%      208  tick_sched_timer_[k]
      212941    0.00%      214  Unsafe.getAndBitwiseAndInt
      211881    0.00%      213  Unsafe_Unpark
      207632    0.00%      205  G1Allocator::unsafe_max_tlab_alloc()
      204905    0.00%      200  check_cpu_stall_[k]
      204363    0.00%      199  native_apic_msr_eoi_write_[k]
      202176    0.00%      203  CellsGroup$$Lambda$48.0x0000000801084430.accept
      201094    0.00%      198  enqueue_task_fair_[k]
      200063    0.00%      200  AbstractQueuedSynchronizer$ConditionObject.await
      197689    0.00%      197  G1RebuildFreeListTask::work(unsigned int)
      197232    0.00%      198  __GI___pthread_mutex_trylock
      196185    0.00%      192  prepare_task_switch_[k]
      196000    0.00%      192  pick_next_task_fair_[k]
      189862    0.00%      186  __hrtimer_next_event_base_[k]
      189749    0.00%      190  CompositeElapsedCounterSource::now()
      189707    0.00%      190  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region(HeapRegion*)
      185460    0.00%      181  cpuacct_account_field_[k]
      185063    0.00%      185  MemAllocator::allocate() const
      184455    0.00%      185  Interpreter
      181429    0.00%      181  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      180863    0.00%      177  file_free_rcu_[k]
      180558    0.00%      176  switch_fpu_return_[k]
      179821    0.00%      180  G1ConcurrentRefine::do_refinement_step(unsigned int, G1ConcurrentRefineStats*)
