--- Execution profile ---
Total samples       : 5036079
not_walkable_not_Java: 10 (0.00%)
unknown_Java        : 28481 (0.57%)
not_walkable_Java   : 665515 (13.21%)
deoptimization      : 217 (0.00%)
skipped             : 10 (0.00%)

--- 425121393 total (8.44%), 420954 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 333593021 total (6.62%), 334356 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 139394148 total (2.77%), 139283 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 136592878 total (2.71%), 136651 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 131725403 total (2.62%), 132044 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$62.0x0000000801085518.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 116106872 total (2.31%), 116178 samples
  [ 0] Thread.clearInterrupt
  [ 1] VirtualThread.getAndClearInterrupt
  [ 2] Thread.interrupted
  [ 3] ReentrantLock$Sync.lockInterruptibly
  [ 4] ReentrantLock.lockInterruptibly
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 113026149 total (2.24%), 113404 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 109046402 total (2.17%), 109035 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 104642517 total (2.08%), 104479 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 95579001 total (1.90%), 95618 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 81047172 total (1.61%), 81289 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 67640606 total (1.34%), 67990 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$62.0x0000000801085518.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 65824128 total (1.31%), 65408 samples
  [ 0] VirtualThread.state
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 63649548 total (1.26%), 63407 samples
  [ 0] Thread.clearInterrupt
  [ 1] VirtualThread.getAndClearInterrupt
  [ 2] Thread.interrupted
  [ 3] ReentrantLock$Sync.lockInterruptibly
  [ 4] ReentrantLock.lockInterruptibly
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 62340824 total (1.24%), 62412 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 61006222 total (1.21%), 60777 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 59237545 total (1.18%), 59176 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 55880778 total (1.11%), 56075 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 55816570 total (1.11%), 55818 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 55168101 total (1.10%), 55283 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 49370524 total (0.98%), 49102 samples
  [ 0] Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 48223536 total (0.96%), 48330 samples
  [ 0] AbstractPipeline.wrapAndCopyInto
  [ 1] ReduceOps$ReduceOp.evaluateSequential
  [ 2] AbstractPipeline.evaluate
  [ 3] IntPipeline.reduce
  [ 4] IntPipeline.sum
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 47671434 total (0.95%), 47795 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] GameOfLife.lambda$calculateFrame$5
  [ 4] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 47361522 total (0.94%), 47394 samples
  [ 0] Cell.calculateNextState
  [ 1] Cell.run
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 47052642 total (0.93%), 47131 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 46519333 total (0.92%), 46555 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 42948145 total (0.85%), 43142 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 41023735 total (0.81%), 41006 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 39948642 total (0.79%), 40133 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$62.0x0000000801085518.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 39753153 total (0.79%), 39896 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] GameOfLife.lambda$calculateFrame$6
  [ 3] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 8] VirtualThread.run
  [ 9] VirtualThread$VThreadContinuation.lambda$new$0
  [10] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [11] Continuation.enter0
  [12] Continuation.enter
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 38440106 total (0.76%), 38557 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$62.0x0000000801085518.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 38164218 total (0.76%), 38080 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] GameOfLife.lambda$calculateFrame$5
  [ 5] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 36804266 total (0.73%), 36890 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] GameOfLife.lambda$calculateFrame$5
  [12] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [13] Dimensions.forEachRowCol
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$7
  [16] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 35227059 total (0.70%), 35284 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] GameOfLife.lambda$calculateFrame$5
  [11] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [12] Dimensions.forEachRowCol
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$7
  [15] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 33916468 total (0.67%), 33989 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 32349779 total (0.64%), 32480 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 32346305 total (0.64%), 32526 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$62.0x0000000801085518.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 32063601 total (0.64%), 32111 samples
  [ 0] VirtualThread.setCarrierThread
  [ 1] VirtualThread.mount
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 31800386 total (0.63%), 31772 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 30868044 total (0.61%), 30959 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run

--- 30237356 total (0.60%), 30201 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 29910898 total (0.59%), 29919 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 29520223 total (0.59%), 29552 samples
  [ 0] AbstractQueuedSynchronizer.casTail
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 29361890 total (0.58%), 29452 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 29267151 total (0.58%), 29304 samples
  [ 0] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 28226229 total (0.56%), 28259 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell.notifyLiveness
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 27564313 total (0.55%), 27654 samples
  [ 0] Cell$$Lambda$62.0x0000000801085518.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 27197212 total (0.54%), 27237 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$62.0x0000000801085518.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 26396729 total (0.52%), 26312 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 25474167 total (0.51%), 25476 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] GameOfLife.lambda$calculateFrame$5
  [ 3] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 8] VirtualThread.run
  [ 9] VirtualThread$VThreadContinuation.lambda$new$0
  [10] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [11] Continuation.enter0
  [12] Continuation.enter
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 25007044 total (0.50%), 25072 samples
  [ 0] Unsafe.compareAndSetBoolean
  [ 1] VarHandleBooleans$FieldInstanceReadWrite.compareAndSet
  [ 2] VarHandleGuards.guard_LII_Z
  [ 3] Continuation.compareAndSetMounted
  [ 4] Continuation.mount
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 24950616 total (0.50%), 25018 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 22898545 total (0.45%), 22772 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 22116623 total (0.44%), 22191 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 22004641 total (0.44%), 22068 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 20819654 total (0.41%), 20871 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$62.0x0000000801085518.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 20234584 total (0.40%), 20193 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 18466489 total (0.37%), 18464 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 18070575 total (0.36%), 18042 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 18004039 total (0.36%), 18029 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 16588464 total (0.33%), 16595 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 15573794 total (0.31%), 15570 samples
  [ 0] Thread.clearInterrupt
  [ 1] VirtualThread.getAndClearInterrupt
  [ 2] Thread.interrupted
  [ 3] ReentrantLock$Sync.lockInterruptibly
  [ 4] ReentrantLock.lockInterruptibly
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 15199464 total (0.30%), 15191 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 15057248 total (0.30%), 15111 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$62.0x0000000801085518.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 14796011 total (0.29%), 14861 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 13813600 total (0.27%), 13794 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife.lambda$calculateFrame$6
  [ 7] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 13188800 total (0.26%), 13238 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 13069508 total (0.26%), 13093 samples
  [ 0] Channel.take
  [ 1] Cell$$Lambda$62.0x0000000801085518.apply
  [ 2] ReferencePipeline$3$1.accept
  [ 3] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 4] AbstractPipeline.copyInto
  [ 5] AbstractPipeline.wrapAndCopyInto
  [ 6] ReduceOps$ReduceOp.evaluateSequential
  [ 7] AbstractPipeline.evaluate
  [ 8] IntPipeline.reduce
  [ 9] IntPipeline.sum
  [10] Cell.calculateNextState
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 12335181 total (0.24%), 12322 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 11941477 total (0.24%), 11923 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife.lambda$calculateFrame$6
  [ 7] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 11781789 total (0.23%), 11820 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer.signalNext
  [ 3] AbstractQueuedSynchronizer.release
  [ 4] ReentrantLock.unlock
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 11707140 total (0.23%), 11752 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 2] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 3] Cont thaw return barrier
  [ 4] [not_walkable_Java]

--- 11680435 total (0.23%), 11700 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 11258453 total (0.22%), 11270 samples
  [ 0] Continuation.yield
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 11052468 total (0.22%), 11098 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife.lambda$calculateFrame$6
  [ 5] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 10781743 total (0.21%), 10802 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 10488522 total (0.21%), 10497 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 10396019 total (0.21%), 10448 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 9995389 total (0.20%), 10036 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 9923765 total (0.20%), 9943 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 9827014 total (0.20%), 9846 samples
  [ 0] Unsafe.getAndSetBoolean
  [ 1] VirtualThread.getAndSetParkPermit
  [ 2] VirtualThread.unpark
  [ 3] System$2.unparkVirtualThread
  [ 4] VirtualThreads.unpark
  [ 5] LockSupport.unpark
  [ 6] AbstractQueuedSynchronizer.signalNext
  [ 7] AbstractQueuedSynchronizer.release
  [ 8] ReentrantLock.unlock
  [ 9] LinkedBlockingQueue.signalNotEmpty
  [10] LinkedBlockingQueue.put
  [11] Channel.put
  [12] GameOfLife.lambda$calculateFrame$5
  [13] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [14] Dimensions.forEachRowCol
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$7
  [17] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [18] VirtualThread.run
  [19] VirtualThread$VThreadContinuation.lambda$new$0
  [20] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [21] Continuation.enter0
  [22] Continuation.enter
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 9653066 total (0.19%), 9707 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$62.0x0000000801085518.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 9592524 total (0.19%), 9556 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 9489628 total (0.19%), 9506 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 9429336 total (0.19%), 9470 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 9100637 total (0.18%), 9131 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 9075955 total (0.18%), 9083 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 8735611 total (0.17%), 8749 samples
  [ 0] Thread.clearInterrupt
  [ 1] VirtualThread.getAndClearInterrupt
  [ 2] Thread.interrupted
  [ 3] ReentrantLock$Sync.lockInterruptibly
  [ 4] ReentrantLock.lockInterruptibly
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 8727612 total (0.17%), 8729 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 8655636 total (0.17%), 8658 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 8453978 total (0.17%), 8480 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.await
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$62.0x0000000801085518.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 8232800 total (0.16%), 8190 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run

--- 8182213 total (0.16%), 8210 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 7701907 total (0.15%), 7710 samples
  [ 0] ReferencePipeline.map
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run

--- 7695745 total (0.15%), 7699 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] [unknown_Java]

--- 7678683 total (0.15%), 7706 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] Cell.lambda$notifyLiveness$0
  [11] Cell$$Lambda$60.0x0000000801084a60.accept
  [12] ArrayList.forEach
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 7673682 total (0.15%), 7700 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 7476799 total (0.15%), 7511 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 7415947 total (0.15%), 7445 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 7399718 total (0.15%), 7407 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 7396299 total (0.15%), 7390 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 7173632 total (0.14%), 7184 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] GameOfLife.lambda$calculateFrame$5
  [ 6] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 7106383 total (0.14%), 7142 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$62.0x0000000801085518.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 7081385 total (0.14%), 7100 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 6726641 total (0.13%), 6710 samples
  [ 0] LockSupport.unpark
  [ 1] AbstractQueuedSynchronizer.signalNext
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 6670852 total (0.13%), 6700 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ThreadPoolExecutor$Worker.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 4] AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] LinkedBlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$62.0x0000000801085518.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 6622798 total (0.13%), 6632 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 6588253 total (0.13%), 6619 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$62.0x0000000801085518.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 6574854 total (0.13%), 6596 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 6511784 total (0.13%), 6526 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] Cell$$Lambda$62.0x0000000801085518.apply
  [ 3] ReferencePipeline$3$1.accept
  [ 4] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 5] AbstractPipeline.copyInto
  [ 6] AbstractPipeline.wrapAndCopyInto
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 6403505 total (0.13%), 6420 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 6246078 total (0.12%), 6260 samples
  [ 0] ForkJoinPool.poolSubmit
  [ 1] ForkJoinPool.execute
  [ 2] VirtualThread.submitRunContinuation
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.unpark
  [ 5] System$2.unparkVirtualThread
  [ 6] VirtualThreads.unpark
  [ 7] LockSupport.unpark
  [ 8] AbstractQueuedSynchronizer.signalNext
  [ 9] AbstractQueuedSynchronizer.release
  [10] ReentrantLock.unlock
  [11] LinkedBlockingQueue.signalNotEmpty
  [12] LinkedBlockingQueue.put
  [13] Channel.put
  [14] GameOfLife.lambda$calculateFrame$5
  [15] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [16] Dimensions.forEachRowCol
  [17] GameOfLife.calculateFrame
  [18] GameOfLife.lambda$calculateFrameBlocking$7
  [19] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [20] VirtualThread.run
  [21] VirtualThread$VThreadContinuation.lambda$new$0
  [22] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [23] Continuation.enter0
  [24] Continuation.enter
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 6066251 total (0.12%), 6091 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 2] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 3] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 4] Cont thaw
  [ 5] [not_walkable_Java]

--- 6061773 total (0.12%), 6070 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] GameOfLife.lambda$calculateFrame$5
  [ 4] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 6057999 total (0.12%), 6078 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$62.0x0000000801085518.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 5997093 total (0.12%), 6010 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 5922828 total (0.12%), 5932 samples
  [ 0] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 1] AbstractQueuedSynchronizer.signalNext
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 5886014 total (0.12%), 5909 samples
  [ 0] VirtualThread.setCarrierThread
  [ 1] VirtualThread.mount
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$62.0x0000000801085518.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 5822555 total (0.12%), 5833 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] GameOfLife.lambda$calculateFrame$5
  [ 5] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$7
  [ 9] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 5739528 total (0.11%), 5734 samples
  [ 0] ReferencePipeline.mapToInt
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run

--- 5635736 total (0.11%), 5645 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$62.0x0000000801085518.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 5623869 total (0.11%), 5652 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 5493826 total (0.11%), 5519 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 5391320 total (0.11%), 5417 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 5229571 total (0.10%), 5236 samples
  [ 0] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 1] System$2.setExtentLocalCache
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

--- 5156148 total (0.10%), 5154 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife.lambda$calculateFrame$6
  [ 4] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$7
  [ 8] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 9] VirtualThread.run
  [10] VirtualThread$VThreadContinuation.lambda$new$0
  [11] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [12] Continuation.enter0
  [13] Continuation.enter
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 5112899 total (0.10%), 5121 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 5046563 total (0.10%), 5061 samples
  [ 0] ThawBase::finalize_thaw(frame&, int)
  [ 1] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 2] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 3] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 4] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 5] Cont thaw
  [ 6] [not_walkable_Java]

--- 5012025 total (0.10%), 5023 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$62.0x0000000801085518.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 4991970 total (0.10%), 5007 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 4983475 total (0.10%), 5007 samples
  [ 0] AbstractQueuedSynchronizer.casTail
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 4942336 total (0.10%), 4964 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 4882330 total (0.10%), 4897 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] Channel.take
  [ 2] GameOfLife.lambda$calculateFrame$6
  [ 3] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 8] VirtualThread.run
  [ 9] VirtualThread$VThreadContinuation.lambda$new$0
  [10] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [11] Continuation.enter0
  [12] Continuation.enter
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 4862478 total (0.10%), 4882 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 4794515 total (0.10%), 4810 samples
  [ 0] G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
  [ 1] Continuation.enterSpecial
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

--- 4784925 total (0.10%), 4797 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 4769786 total (0.09%), 4767 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife.lambda$calculateFrame$6
  [ 6] GameOfLife$$Lambda$79.0x00000008010865b8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$7
  [10] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 4756573 total (0.09%), 4757 samples
  [ 0] AbstractPipeline.evaluate
  [ 1] IntPipeline.reduce
  [ 2] IntPipeline.sum
  [ 3] Cell.calculateNextState
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 4714241 total (0.09%), 4730 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$62.0x0000000801085518.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 4703398 total (0.09%), 4726 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 2] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 3] Cont thaw
  [ 4] [not_walkable_Java]

--- 4600245 total (0.09%), 4606 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 4592522 total (0.09%), 4605 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 4506148 total (0.09%), 4511 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 4497434 total (0.09%), 4504 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 4458932 total (0.09%), 4469 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 4450284 total (0.09%), 4468 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$60.0x0000000801084a60.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 4443229 total (0.09%), 4449 samples
  [ 0] VirtualThread.mount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell.notifyLiveness
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 4430302 total (0.09%), 4451 samples
  [ 0] FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 4372667 total (0.09%), 4264 samples
  [ 0] clear_page_erms_[k]
  [ 1] get_page_from_freelist_[k]
  [ 2] __alloc_pages_[k]
  [ 3] alloc_pages_vma_[k]
  [ 4] do_anonymous_page_[k]
  [ 5] handle_pte_fault_[k]
  [ 6] __handle_mm_fault_[k]
  [ 7] handle_mm_fault_[k]
  [ 8] do_user_addr_fault_[k]
  [ 9] exc_page_fault_[k]
  [10] asm_exc_page_fault_[k]
  [11] AbstractQueuedSynchronizer.setState
  [12] ReentrantLock$NonfairSync.initialTryLock
  [13] ReentrantLock$Sync.lockInterruptibly
  [14] ReentrantLock.lockInterruptibly
  [15] LinkedBlockingQueue.put
  [16] Channel.put
  [17] Cell.lambda$notifyLiveness$0
  [18] Cell$$Lambda$60.0x0000000801084a60.accept
  [19] ArrayList.forEach
  [20] Cell.notifyLiveness
  [21] Cell.run
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 4337560 total (0.09%), 4351 samples
  [ 0] ThawBase::finalize_thaw(frame&, int)
  [ 1] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 2] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 3] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 4] Cont thaw return barrier
  [ 5] [not_walkable_Java]

--- 4280267 total (0.08%), 4283 samples
  [ 0] Cont thaw
  [ 1] [unknown_Java]

--- 4253560 total (0.08%), 4270 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 4184848 total (0.08%), 4198 samples
  [ 0] vtable stub
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 4140784 total (0.08%), 4163 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] Channel.put
  [15] GameOfLife.lambda$calculateFrame$5
  [16] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [17] Dimensions.forEachRowCol
  [18] GameOfLife.calculateFrame
  [19] GameOfLife.lambda$calculateFrameBlocking$7
  [20] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [21] VirtualThread.run
  [22] VirtualThread$VThreadContinuation.lambda$new$0
  [23] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [24] Continuation.enter0
  [25] Continuation.enter
  [26] Continuation.enterSpecial
  [27] Continuation.run
  [28] VirtualThread.runContinuation
  [29] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [30] ForkJoinTask$RunnableExecuteAction.exec
  [31] ForkJoinTask.doExec
  [32] ForkJoinPool$WorkQueue.topLevelExec
  [33] ForkJoinPool.scan
  [34] ForkJoinPool.runWorker
  [35] ForkJoinWorkerThread.run

--- 4042894 total (0.08%), 4040 samples
  [ 0] ReduceOps.makeInt
  [ 1] IntPipeline.reduce
  [ 2] IntPipeline.sum
  [ 3] Cell.calculateNextState
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 3921357 total (0.08%), 3933 samples
  [ 0] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 3843318 total (0.08%), 3857 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] GameOfLife.lambda$calculateFrame$5
  [11] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [12] Dimensions.forEachRowCol
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$7
  [15] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 3833252 total (0.08%), 3834 samples
  [ 0] AbstractPipeline.sourceSpliterator
  [ 1] AbstractPipeline.evaluate
  [ 2] IntPipeline.reduce
  [ 3] IntPipeline.sum
  [ 4] Cell.calculateNextState
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 3808059 total (0.08%), 3820 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 3786662 total (0.08%), 3801 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] [unknown_Java]

--- 3780721 total (0.08%), 3800 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 3705452 total (0.07%), 3715 samples
  [ 0] ReferencePipeline$3$1.accept
  [ 1] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 3671785 total (0.07%), 3684 samples
  [ 0] Continuation.yield
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] Channel.take
  [12] Cell$$Lambda$62.0x0000000801085518.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 3648808 total (0.07%), 3654 samples
  [ 0] ArrayList.forEach
  [ 1] Cell.notifyLiveness
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run

--- 3640530 total (0.07%), 3641 samples
  [ 0] ReduceOps$6.makeSink
  [ 1] ReduceOps$6.makeSink
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 3584441 total (0.07%), 3592 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 3556986 total (0.07%), 3556 samples
  [ 0] VirtualThread.getAndSetParkPermit
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] Channel.put
  [11] GameOfLife.lambda$calculateFrame$5
  [12] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [13] Dimensions.forEachRowCol
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$7
  [16] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 3543968 total (0.07%), 3551 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$62.0x0000000801085518.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 3480811 total (0.07%), 3499 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] Channel.put
  [15] GameOfLife.lambda$calculateFrame$5
  [16] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [17] Dimensions.forEachRowCol
  [18] GameOfLife.calculateFrame
  [19] GameOfLife.lambda$calculateFrameBlocking$7
  [20] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [21] VirtualThread.run
  [22] VirtualThread$VThreadContinuation.lambda$new$0
  [23] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [24] Continuation.enter0
  [25] Continuation.enter
  [26] Continuation.enterSpecial
  [27] Continuation.run
  [28] VirtualThread.runContinuation
  [29] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [30] ForkJoinTask$RunnableExecuteAction.exec
  [31] ForkJoinTask.doExec
  [32] ForkJoinPool$WorkQueue.topLevelExec
  [33] ForkJoinPool.scan
  [34] ForkJoinPool.runWorker
  [35] ForkJoinWorkerThread.run

--- 3462866 total (0.07%), 3469 samples
  [ 0] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 3406409 total (0.07%), 3417 samples
  [ 0] ForkJoinPool.poolSubmit
  [ 1] ForkJoinPool.execute
  [ 2] VirtualThread.submitRunContinuation
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.unpark
  [ 5] System$2.unparkVirtualThread
  [ 6] VirtualThreads.unpark
  [ 7] LockSupport.unpark
  [ 8] AbstractQueuedSynchronizer.signalNext
  [ 9] AbstractQueuedSynchronizer.release
  [10] ReentrantLock.unlock
  [11] LinkedBlockingQueue.signalNotEmpty
  [12] LinkedBlockingQueue.put
  [13] Channel.put
  [14] GameOfLife.lambda$calculateFrame$5
  [15] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [16] Dimensions.forEachRowCol
  [17] GameOfLife.calculateFrame
  [18] GameOfLife.lambda$calculateFrameBlocking$7
  [19] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [20] VirtualThread.run
  [21] VirtualThread$VThreadContinuation.lambda$new$0
  [22] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [23] Continuation.enter0
  [24] Continuation.enter
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 3361097 total (0.07%), 3373 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 3360255 total (0.07%), 3354 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] GameOfLife.lambda$calculateFrame$5
  [ 3] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$7
  [ 7] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 8] VirtualThread.run
  [ 9] VirtualThread$VThreadContinuation.lambda$new$0
  [10] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [11] Continuation.enter0
  [12] Continuation.enter
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 3341349 total (0.07%), 3353 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 3300824 total (0.07%), 3318 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 3264209 total (0.06%), 3277 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 3211188 total (0.06%), 3224 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 3207979 total (0.06%), 3223 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 3169508 total (0.06%), 3184 samples
  [ 0] Unsafe.getAndBitwiseOrInt
  [ 1] ForkJoinTask.getAndBitwiseOrStatus
  [ 2] ForkJoinTask.setDone
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run

--- 3163450 total (0.06%), 3179 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 3154746 total (0.06%), 3156 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 3019045 total (0.06%), 3029 samples
  [ 0] AbstractQueuedSynchronizer$Node.setPrevRelaxed
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] Channel.put
  [ 7] GameOfLife.lambda$calculateFrame$5
  [ 8] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 9] Dimensions.forEachRowCol
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$7
  [12] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 3013833 total (0.06%), 3024 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] Channel.put
  [10] GameOfLife.lambda$calculateFrame$5
  [11] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [12] Dimensions.forEachRowCol
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$7
  [15] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 2976765 total (0.06%), 2986 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$60.0x0000000801084a60.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 2952298 total (0.06%), 2947 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 2948710 total (0.06%), 2952 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 2844434 total (0.06%), 2857 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 2809868 total (0.06%), 2816 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$62.0x0000000801085518.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 2807248 total (0.06%), 2822 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] Channel.put
  [15] GameOfLife.lambda$calculateFrame$5
  [16] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [17] Dimensions.forEachRowCol
  [18] GameOfLife.calculateFrame
  [19] GameOfLife.lambda$calculateFrameBlocking$7
  [20] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [21] VirtualThread.run
  [22] VirtualThread$VThreadContinuation.lambda$new$0
  [23] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [24] Continuation.enter0
  [25] Continuation.enter
  [26] Continuation.enterSpecial
  [27] Continuation.run
  [28] VirtualThread.runContinuation
  [29] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [30] ForkJoinTask$RunnableExecuteAction.exec
  [31] ForkJoinTask.doExec
  [32] ForkJoinPool$WorkQueue.topLevelExec
  [33] ForkJoinPool.scan
  [34] ForkJoinPool.runWorker
  [35] ForkJoinWorkerThread.run

--- 2754137 total (0.05%), 2764 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 2] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 3] Cont thaw return barrier
  [ 4] [not_walkable_Java]

--- 2735135 total (0.05%), 2751 samples
  [ 0] VirtualThread.park
  [ 1] System$2.parkVirtualThread
  [ 2] VirtualThreads.park
  [ 3] LockSupport.park
  [ 4] AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] ForkJoinPool.unmanagedBlock
  [ 6] ForkJoinPool.managedBlock
  [ 7] AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] LinkedBlockingQueue.take
  [ 9] Channel.take
  [10] Cell$$Lambda$62.0x0000000801085518.apply
  [11] ReferencePipeline$3$1.accept
  [12] ArrayList$ArrayListSpliterator.forEachRemaining
  [13] AbstractPipeline.copyInto
  [14] AbstractPipeline.wrapAndCopyInto
  [15] ReduceOps$ReduceOp.evaluateSequential
  [16] AbstractPipeline.evaluate
  [17] IntPipeline.reduce
  [18] IntPipeline.sum
  [19] Cell.calculateNextState
  [20] Cell.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 2728525 total (0.05%), 2740 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$62.0x0000000801085518.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 2727191 total (0.05%), 2739 samples
  [ 0] ReferencePipeline$3$1.accept
  [ 1] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 2690952 total (0.05%), 2690 samples
  [ 0] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 1] AbstractQueuedSynchronizer.signalNext
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] Channel.put
  [ 6] GameOfLife.lambda$calculateFrame$5
  [ 7] GameOfLife$$Lambda$56.0x0000000801084400.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$7
  [11] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 2607916 total (0.05%), 2613 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$62.0x0000000801085518.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 2595874 total (0.05%), 2595 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] GameOfLife.calculateFrame
  [ 2] GameOfLife.lambda$calculateFrameBlocking$7
  [ 3] GameOfLife$$Lambda$55.0x00000008010841f0.run
  [ 4] VirtualThread.run
  [ 5] VirtualThread$VThreadContinuation.lambda$new$0
  [ 6] VirtualThread$VThreadContinuation$$Lambda$52.0x00000008010368b8.run
  [ 7] Continuation.enter0
  [ 8] Continuation.enter
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 2590848 total (0.05%), 2603 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 2574038 total (0.05%), 2578 samples
  [ 0] ForkJoinPool$WorkQueue.casSlotToNull
  [ 1] ForkJoinPool$WorkQueue.tryPoll
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run

--- 2552796 total (0.05%), 2558 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] [unknown_Java]

--- 2518939 total (0.05%), 2522 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$53.0x0000000801036ac8.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

       total  percent  samples  top
  ----------  -------  -------  ---
   542457409   10.77%   543410  VirtualThread.getAndClearInterrupt
   440487369    8.75%   436356  __memmove_sse2_unaligned_erms
   301188653    5.98%   301657  Thread.interrupted
   224365504    4.46%   224890  AbstractOwnableSynchronizer.setExclusiveOwnerThread
   205701565    4.08%   205541  Thread.clearInterrupt
   205301712    4.08%   205147  ReentrantLock$Sync.lockInterruptibly
   188799732    3.75%   189275  AbstractQueuedSynchronizer$ConditionObject.enableWait
   180782494    3.59%   180799  VirtualThread.compareAndSetState
   180735002    3.59%   181268  LinkedBlockingQueue.enqueue
   159371122    3.16%   159466  Cell.lambda$notifyLiveness$0
   136400867    2.71%   136617  LinkedBlockingQueue.dequeue
   129710410    2.58%   130129  LinkedBlockingQueue.take
   101656496    2.02%   101996  Thread.getAndClearInterrupt
    99602873    1.98%    99880  AbstractQueuedSynchronizer.compareAndSetState
    86317467    1.71%    86475  Unsafe.getAndBitwiseAndInt
    71446834    1.42%    71543  LinkedBlockingQueue.put
    71360422    1.42%    71594  ReentrantLock$NonfairSync.initialTryLock
    66760719    1.33%    66347  VirtualThread.state
    64074391    1.27%    63900  AbstractQueuedSynchronizer.enqueue
    63007372    1.25%    62790  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
    57106122    1.13%    57241  VirtualThread.unpark
    56354741    1.12%    56369  Continuation.yield0
    53641507    1.07%    53842  AbstractQueuedSynchronizer.release
    53083302    1.05%    53027  Dimensions.forEachRowCol
    52016930    1.03%    51746  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
    49739113    0.99%    49775  Cell.calculateNextState
    48223536    0.96%    48330  AbstractPipeline.wrapAndCopyInto
    47396650    0.94%    47406  ReentrantLock.lockInterruptibly
    46147157    0.92%    46385  ForkJoinPool$WorkQueue.push
    40067333    0.80%    40191  ReentrantLock$Sync.isHeldExclusively
    38138348    0.76%    38210  VirtualThread.setCarrierThread
    35849399    0.71%    35839  AbstractQueuedSynchronizer$ConditionObject.doSignal
    35425308    0.70%    35474  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
    35235230    0.70%    35294  AbstractQueuedSynchronizer.casTail
    34411922    0.68%    34539  AbstractQueuedSynchronizer.acquire
    31801000    0.63%    31819  Continuation::prepare_thaw(JavaThread*, bool)
    30938820    0.61%    31030  System$2.setExtentLocalCache
    29670436    0.59%    29762  ReduceOps$5ReducingSink.get
    28789389    0.57%    28837  AtomicInteger.getAndDecrement
    28083488    0.56%    28174  Cell$$Lambda$62.0x0000000801085518.apply
    25565918    0.51%    25626  VirtualThread.unmount
    25048829    0.50%    25114  Unsafe.compareAndSetBoolean
    25047745    0.50%    25135  AbstractQueuedSynchronizer$ConditionObject.signal
    22683541    0.45%    22777  ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
    22461626    0.45%    22425  LockSupport.setCurrentBlocker
    20129839    0.40%    20200  ForkJoinPool.poolSubmit
    17646139    0.35%    17205  clear_page_erms_[k]
    15732509    0.31%    15758  Channel.take
    15698857    0.31%    15742  AbstractQueuedSynchronizer$ConditionObject.await
    15070617    0.30%    15095  Continuation.yield
    14523049    0.29%    14550  AbstractQueuedSynchronizer.signalNext
    14309770    0.28%    14318  Channel.put
    13032274    0.26%    13039  AbstractPipeline.<init>
    12005392    0.24%    12046  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
    11834967    0.24%    11849  AbstractQueuedSynchronizer$Node.getAndUnsetStatus
    11390156    0.23%    11408  AbstractQueuedSynchronizer.setState
    11264030    0.22%    11309  ReentrantLock$Sync.tryRelease
    11165964    0.22%    11190  Unsafe.getAndSetBoolean
    10750284    0.21%    10787  ReferencePipeline$3$1.accept
     9791330    0.19%     9821  ThawBase::finalize_thaw(frame&, int)
     9289673    0.18%     9284  LockSupport.unpark
     8278220    0.16%     8303  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
     8232800    0.16%     8190  ForkJoinTask$RunnableExecuteAction.exec
     8031710    0.16%     8040  ReferencePipeline.map
     7650111    0.15%     7658  G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
     7198365    0.14%     7210  VirtualThread.mount
     6980531    0.14%     7013  VirtualThread.submitRunContinuation
     6361180    0.13%     6362  AbstractPipeline.evaluate
     6296992    0.13%     6304  ArrayList.forEach
     6092961    0.12%     6116  ThawBase::thaw_slow(stackChunkOopDesc*, bool)
     6068868    0.12%     6063  ReferencePipeline.mapToInt
     5484765    0.11%     5502  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     5461965    0.11%     5477  ReferencePipeline$4.opWrapSink
     5003324    0.10%     5004  ReduceOps$6.makeSink
     4995075    0.10%     5015  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
     4716311    0.09%     4720  Cont thaw
     4590832    0.09%     4593  VirtualThread.getAndSetParkPermit
     4509139    0.09%     4506  ReduceOps.makeInt
     4444904    0.09%     4458  VirtualThread.runContinuation
     4366870    0.09%     4313  get_mem_cgroup_from_mm_[k]
     4189910    0.08%     4203  vtable stub
     4182979    0.08%     4198  ReferencePipeline$3.opWrapSink
     4099223    0.08%     4116  Sink$ChainedReference.<init>
     4096721    0.08%     4104  Cell$$Lambda$60.0x0000000801084a60.accept
     4027669    0.08%     4046  Unsafe.getAndBitwiseOrInt
     3932505    0.08%     3933  AbstractPipeline.sourceSpliterator
     3727726    0.07%     3742  Continuation.run
     3544760    0.07%     3556  ArrayList$ArrayListSpliterator.forEachRemaining
     3483827    0.07%     3496  AbstractQueuedSynchronizer$Node.setPrevRelaxed
     3445615    0.07%     3463  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
     3435099    0.07%     3443  ForkJoinPool$WorkQueue.casSlotToNull
     3302606    0.07%     3322  VirtualThread.park
     3269671    0.06%     3286  Cell.run
     3051342    0.06%     3001  psi_group_change_[k]
     2980141    0.06%     2995  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
     2797932    0.06%     2720  __update_blocked_fair_[k]
     2752662    0.05%     2766  SafepointMechanism::update_poll_values(JavaThread*)
     2653405    0.05%     2662  FreezeBase::recurse_freeze_compiled_frame(frame&, frame&, int, bool)
     2649570    0.05%     2662  VirtualThread.afterYield
     2610220    0.05%     2617  ReferencePipeline$4$1.accept
     2589503    0.05%     2600  ForkJoinPool.execute
     2530715    0.05%     2546  itable stub
     2479534    0.05%     2415  update_curr_[k]
     2477348    0.05%     2489  ForkJoinPool.scan
     2313691    0.05%     2313  VirtualThread.setParkPermit
     2175087    0.04%     2124  __update_load_avg_se_[k]
     2132433    0.04%     2140  Thread.setContinuation
     2088760    0.04%     2095  AbstractQueuedSynchronizer.getState
     2002225    0.04%     1961  __update_load_avg_cfs_rq_[k]
     1819080    0.04%     1765  __hrtimer_run_queues_[k]
     1812918    0.04%     1821  CodeBlob::is_safepoint_stub() const
     1800733    0.04%     1810  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
     1780541    0.04%     1789  Continuation.enterSpecial
     1735895    0.03%     1721  memcpy@GLIBC_2.2.5
     1706291    0.03%     1662  update_load_avg_[k]
     1701678    0.03%     1710  ForkJoinPool$WorkQueue.nextLocalTask
     1668246    0.03%     1676  ReentrantLock.unlock
     1521358    0.03%     1524  AtomicInteger.get
     1449260    0.03%     1458  ForkJoinPool$WorkQueue.tryPoll
     1364068    0.03%     1335  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
     1340198    0.03%     1313  timerqueue_add_[k]
     1249259    0.02%     1257  Unsafe_AllocateInstance
     1229240    0.02%     1233  AtomicInteger.getAndIncrement
     1189915    0.02%     1190  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     1173513    0.02%     1158  rmqueue_bulk.constprop.0_[k]
     1162400    0.02%     1169  Cont thaw return barrier
     1152384    0.02%     1155  StreamSupport.stream
     1143671    0.02%     1151  Sink$ChainedReference.end
     1139555    0.02%     1113  _raw_spin_lock_[k]
     1129443    0.02%     1131  System$2.unparkVirtualThread
     1103369    0.02%     1102  AbstractPipeline.isParallel
     1101141    0.02%     1065  hrtimer_interrupt_[k]
     1096812    0.02%     1103  Unsafe.allocateInstance
     1083611    0.02%     1089  ThawBase::finish_thaw(frame&)
     1068138    0.02%     1044  psi_task_switch_[k]
     1066092    0.02%     1069  freeze_epilog(JavaThread*, ContinuationWrapper&, freeze_result) [clone .part.0] [clone .isra.0]
     1017152    0.02%     1005  memcpy@plt
     1000634    0.02%      986  asm_exc_page_fault_[k]
      966823    0.02%      963  vframeStream::vframeStream(JavaThread*, bool, bool, bool)
      936213    0.02%      940  ArrayList$ArrayListSpliterator.getFence
      926747    0.02%      930  ForkJoinPool$WorkQueue.topLevelExec
      899061    0.02%      902  os::vm_page_size()
      865191    0.02%      847  cpuacct_charge_[k]
      848592    0.02%      853  FreezeBase::finish_freeze(frame const&, frame const&)
      847769    0.02%      841  __memset_avx2_erms
      846867    0.02%      824  _raw_spin_lock_irqsave_[k]
      844327    0.02%      818  rb_next_[k]
      803998    0.02%      805  oopDesc::address_field(int) const
      801045    0.02%      787  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
      784711    0.02%      788  JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector()
      774899    0.02%      761  mem_cgroup_charge_[k]
      772554    0.02%      776  oopDesc::address_field_put(int, unsigned char*)
      747586    0.01%      746  Freeze<Config<(oop_kind)0, G1BarrierSet> >::try_freeze_fast()
      745934    0.01%      748  ForkJoinTask.doExec
      729858    0.01%      734  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
      708953    0.01%      712  LinkedBlockingQueue.signalNotEmpty
      689130    0.01%      674  sync_regs_[k]
      673995    0.01%      675  ArrayList.spliterator
      662020    0.01%      665  ThawBase::recurse_thaw_interpreted_frame(frame const&, frame&, int)
      661785    0.01%      663  FreezeBase::patch(frame const&, frame&, frame const&, bool)
      657904    0.01%      645  get_page_from_freelist_[k]
      655856    0.01%      640  account_user_time_[k]
      649923    0.01%      638  psi_task_change_[k]
      649104    0.01%      649  ReduceOps$ReduceOp.evaluateSequential
      637249    0.01%      626  __schedule_[k]
      634576    0.01%      637  Cell.notifyLiveness
      634308    0.01%      636  AbstractPipeline.wrapSink
      634259    0.01%      638  void stackChunkOopDesc::fix_thawed_frame<SmallRegisterMap>(frame const&, SmallRegisterMap const*)
      630705    0.01%      634  CodeBlob::is_runtime_stub() const
      625769    0.01%      609  update_process_times_[k]
      619053    0.01%      601  __cgroup_account_cputime_field_[k]
      604688    0.01%      607  ImmutableCollections$ListN.get
      583147    0.01%      573  select_task_rq_fair_[k]
      555497    0.01%      542  load_balance_[k]
      547023    0.01%      549  ReduceOps$5ReducingSink.accept
      546140    0.01%      533  __calc_delta_[k]
      542649    0.01%      531  native_sched_clock_[k]
      542022    0.01%      544  ForkJoinPool.unmanagedBlock
      540699    0.01%      540  I2C/C2I adapters
      531766    0.01%      535  ForkJoinPool$WorkQueue.getAndClearSlot
      530055    0.01%      532  Continuation.mount
      525665    0.01%      528  __tls_get_addr
      522262    0.01%      528  ForkJoinPool.signalWork
      520768    0.01%      520  Unsafe_Park
      518671    0.01%      509  update_sg_lb_stats_[k]
      506632    0.01%      502  rcu_read_unlock_strict_[k]
      492048    0.01%      488  rmqueue_[k]
      491308    0.01%      492  ReferencePipeline.<init>
      478420    0.01%      474  __mod_memcg_lruvec_state_[k]
      461234    0.01%      448  timekeeping_advance_[k]
      451017    0.01%      453  VirtualThread.yieldContinuation
      446309    0.01%      443  __mem_cgroup_charge_[k]
      445878    0.01%      449  MemAllocator::allocate() const
      437991    0.01%      424  VirtualThread.afterTerminate
      436479    0.01%      438  Integer.valueOf
      434242    0.01%      432  G1CardSet::occupied() const
      433943    0.01%      426  update_rq_clock_[k]
      427782    0.01%      418  update_sd_lb_stats.constprop.0_[k]
      427764    0.01%      417  task_tick_fair_[k]
      427383    0.01%      424  try_charge_[k]
